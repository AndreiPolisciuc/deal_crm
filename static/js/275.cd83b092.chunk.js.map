{"version":3,"file":"static/js/275.cd83b092.chunk.js","mappings":"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","sources":["components/status/DeleteModal.tsx","components/status/EditForm.tsx","components/status/EditSidePanel.tsx","components/status/List.tsx","components/status/AddForm.tsx","components/status/AddSidePanel.tsx","pages/Statuses.tsx","components/BreadcrumbsComp.tsx","../node_modules/react-bootstrap/esm/Table.js","store/useStatusStore.ts"],"sourcesContent":["import React from 'react';\nimport {useStatusStore} from \"../../store/useStatusStore\";\nimport {Button, Modal} from \"react-bootstrap\";\n\ntype DeleteModalProps = {\n    id:number,\n    showDeleteModal: boolean,\n    handleCloseDeleteModal:()=>void\n}\n\nconst DeleteModal = ({id, showDeleteModal, handleCloseDeleteModal}:DeleteModalProps) => {\n    const { deleteStatus  } = useStatusStore();\n    const handleDelete =() =>{\n        handleCloseDeleteModal();\n        deleteStatus(id);\n    }\n\n    return (\n        <Modal show={showDeleteModal} onHide={handleCloseDeleteModal} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>Warning</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure you want to delete the status?</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\n                    Cancel\n                </Button>\n                <Button variant=\"danger\" onClick={handleDelete}>\n                    Delete\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default DeleteModal;","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {useStatusStore} from \"../../store/useStatusStore\";\nimport {StatusInputEdit} from \"../../types/Status\";\n\ntype EditFormProps = {\n    id:number,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditForm = ({id, handleCloseEditSidePanel}:EditFormProps) => {\n    const { status, fetchStatus,  updateStatus } = useStatusStore();\n    const [form, setForm] = useState<StatusInputEdit>({id:0, name: '', active:true, sort:500, color:''});\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await updateStatus(form);\n        setForm({id:0, name: '', active: true , sort: 500, color:'' });\n        handleCloseEditSidePanel()\n    };\n\n    useEffect(() => {\n        fetchStatus(id);\n    }, []);\n    useEffect(() => {\n        setForm({id:id, name: status?.name, color: status?.color, active:status?.active, sort:status?.sort});\n    }, [status]);\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Status Name*</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Status Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Status Color</Form.Label>\n                        <Form.Control\n                            name=\"color\"\n                            type=\"color\"\n                            value={form.color}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Sort*</Form.Label>\n                        <Form.Control\n                            name=\"sort\"\n                            required\n                            type=\"number\"\n                            value={form.sort}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Check\n                            checked={form.active}\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"Active\"\n                            onChange={(e)=>setForm({...form, active: e.target.checked\n                            })}\n                        />\n                    </Form.Group>\n\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Update</Button>\n                <Button onClick={handleCloseEditSidePanel} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default EditForm;","import React from 'react';\nimport {Offcanvas} from \"react-bootstrap\";\nimport EditForm from \"./EditForm\";\n\ntype EditSidePanelProps = {\n    id:number,\n    showEditSidePanel: boolean,\n    handleCloseEditSidePanel:()=>void\n}\n\n\nconst EditSidePanel = ({id, showEditSidePanel, handleCloseEditSidePanel }:EditSidePanelProps) => {\n    return (\n        <Offcanvas show={showEditSidePanel} onHide={handleCloseEditSidePanel} placement={\"end\"} >\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>Edit Status</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                <EditForm id={id} handleCloseEditSidePanel={handleCloseEditSidePanel} />\n            </Offcanvas.Body>\n        </Offcanvas>\n    );\n};\n\nexport default EditSidePanel;","import React, { useEffect, useState } from 'react';\nimport { Button, Table } from \"react-bootstrap\";\nimport { useStatusStore } from '../../store/useStatusStore';\nimport DeleteModal from \"./DeleteModal\";\nimport EditSidePanel from \"./EditSidePanel\";\n\nconst List = () => {\n    // Destructure state and action from company store\n    const { statuses, fetchStatuses } = useStatusStore();\n\n    // ID used for editing or deleting a company\n    const [id, setId] = useState(0);\n\n    // Delete modal state and handlers\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n    const handleCloseDeleteModal = () => {\n        setShowDeleteModal(false);\n        setId(0);\n    }\n    const handleShowDeleteModal = (id: number) => {\n        setId(id);\n        setShowDeleteModal(true);\n    }\n\n    // Edit side panel state and handlers\n    const [showEditSidePanel, setShowEditSidePanel] = useState(false);\n    const handleCloseEditSidePanel = () => {\n        setShowEditSidePanel(false);\n        setId(0);\n    }\n    const handleShowEditSidePanel = (id: number) => {\n        setId(id);\n        setShowEditSidePanel(true);\n    }\n\n    // Fetch company data on component mount\n    useEffect(() => {\n        fetchStatuses();\n    }, []);\n\n    return (\n        <>\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th className=\"text-start\">Name</th>\n                    <th>Sort</th>\n                    <th>Action</th>\n                </tr>\n                </thead>\n                <tbody>\n                {statuses.map((status) => (\n                    // Apply gray style to inactive companies\n                    <tr className={!status.active ? 'table-secondary text-muted' : ''} style={{ '--bs-table-bg': status.color } as React.CSSProperties} key={status.id}>\n                        <td>{status.id}</td>\n                        <td className=\"text-start\">\n                            {status.name}\n                        </td>\n                        {/* Format the creation date */}\n                        <td className=\"w-25\">{status.sort}</td>\n                        <td>\n                            {/* Edit button opens side panel */}\n                            <Button variant=\"secondary\" className=\"m-1\" onClick={() => handleShowEditSidePanel(status.id)}>\n                                <i className=\"bi bi-pencil\"></i>\n                            </Button>\n\n                            {/* Delete button opens modal */}\n                            { (status.id !== 5 && status.id !== 1) && <Button variant=\"danger\" className=\"m-1\" onClick={() => handleShowDeleteModal(status.id)}>\n                                <i className=\"bi bi-trash\"></i>\n                            </Button>}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </Table>\n\n            {/* Delete confirmation modal */}\n            <DeleteModal\n                id={id}\n                showDeleteModal={showDeleteModal}\n                handleCloseDeleteModal={handleCloseDeleteModal}\n            />\n\n            {/* Edit side panel */}\n            <EditSidePanel\n                id={id}\n                showEditSidePanel={showEditSidePanel}\n                handleCloseEditSidePanel={handleCloseEditSidePanel}\n            />\n        </>\n    );\n};\n\nexport default List;\n","import React, {useState} from 'react';\nimport {StatusInput} from \"../../types/Status\";\nimport {useStatusStore} from \"../../store/useStatusStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\n\ntype AddFormProps = {\n    handleClose:()=>void\n}\n\nconst AddForm = ({handleClose}:AddFormProps) => {\n    const [form, setForm] = useState<StatusInput>({ name: '', sort: 500, color:'' });\n    const [validated, setValidated] = useState(false);\n    const addStatus = useStatusStore(state => state.addStatus);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n        console.log(form)\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await addStatus(form);\n        setForm({ name: '', sort: 500, color: '' });\n        handleClose()\n    };\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Status Name*</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Status Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group >\n                        <Form.Label>Status Color</Form.Label>\n                        <Form.Control\n                            name=\"color\"\n                            type=\"color\"\n                            value={form.color}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Sort*</Form.Label>\n                        <Form.Control\n                            name=\"sort\"\n                            required\n                            type=\"number\"\n                            defaultValue={500}\n                            value={form.sort}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n\n                <Button className={\"mx-1\"}  type=\"submit\">Create</Button>\n                <Button onClick={handleClose} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default AddForm;","import React from 'react';\nimport {Offcanvas} from \"react-bootstrap\";\nimport AddForm from \"./AddForm\";\n\ntype AddSidePanelProps = {\n    show: boolean;\n    handleClose: () => void;\n}\n\nconst AddSidePanel = ({show, handleClose}: AddSidePanelProps) => {\n    return (\n        <Offcanvas show={show} placement={\"end\"} onHide={handleClose} scroll={true} >\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>Create Status</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                <AddForm handleClose={handleClose} />\n            </Offcanvas.Body>\n        </Offcanvas>\n    );\n};\n\nexport default AddSidePanel;","import React, {useState} from 'react';\nimport {Button, Container} from \"react-bootstrap\";\nimport BreadcrumbsComp from \"../components/BreadcrumbsComp\";\nimport List from \"../components/status/List\";\nimport AddSidePanel from \"../components/status/AddSidePanel\";\n\nconst Statuses = () => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Container>\n                <h1>Statuses</h1>\n                <BreadcrumbsComp openPageName={\"Statuses\"}/>\n                <div className={'d-flex justify-content-end mb-3'}>\n                    <Button variant=\"primary\" onClick={handleShow}>\n                        <i className=\"me-2 bi bi-plus-circle\"></i>\n                        Add Status\n                    </Button>\n                </div>\n                <List/>\n            </Container>\n            <AddSidePanel show={show} handleClose={handleClose}/>\n        </>\n    );\n};\n\nexport default Statuses;","import { Breadcrumb } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\n\ntype BreadcrumbsCompProps ={\n    openPageName : string\n}\n\nconst BreadcrumbsComp = ({openPageName}:BreadcrumbsCompProps) => {\n    const location = useLocation();\n    const paths = location.pathname.split('/').filter(Boolean);\n\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item linkAs={Link} linkProps={{ to: '/' }}>\n                Home\n            </Breadcrumb.Item>\n\n            {paths.map((segment, index) => {\n                const path = '/' + paths.slice(0, index + 1).join('/');\n                const isLast = index === paths.length - 1;\n\n                return isLast ? (\n                    <Breadcrumb.Item active key={path}>\n                        {openPageName}\n                    </Breadcrumb.Item>\n                ) : (\n                    <Breadcrumb.Item linkAs={Link} linkProps={{ to: path }} key={path}>\n                        {decodeURIComponent(segment)}\n                    </Breadcrumb.Item>\n                );\n            })}\n        </Breadcrumb>\n    );\n};\n\nexport default BreadcrumbsComp;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nTable.displayName = 'Table';\nexport default Table;","import { create } from 'zustand';\nimport axios from 'axios';\nimport {Status, StatusInput, StatusInputEdit} from \"../types/Status\";\nimport {SERVER_LINK} from \"../globals\";\n\ninterface StatusState {\n    statuses: Status[];\n    status:Status;\n    loading: boolean;\n    error: string | null;\n    fetchStatuses: () => Promise<void>;\n    fetchActiveStatuses: () => Promise<void>;\n    fetchStatus: (id:number) => Promise<void>;\n    addStatus: (Status: StatusInput) => Promise<void>;\n    deleteStatus: (id: number) => Promise<void>;\n    updateStatus: (Status: StatusInputEdit) => Promise<void>;\n\n}\n\nconst apiLinkToServer = SERVER_LINK+'/api/status';\n\nexport const useStatusStore = create<StatusState>((set, get) => ({\n    statuses: [],\n    loading: false,\n    error: null,\n    status:{\n        id:0,\n        name:'',\n        created_at:'',\n        active:true,\n        sort:500,\n        color:''\n    },\n\n    fetchStatus: async (id) => {\n        set({ loading: true, error: null });\n        try {\n            const res = await axios.get<Status>(apiLinkToServer+\"/\"+id);\n            set({ status: res.data, loading: false });\n        } catch (err: any) {\n            set({ error: err.message, loading: false });\n        }\n    },\n\n\n\n    fetchStatuses: async () => {\n        set({ loading: true, error: null });\n        try {\n            const res = await axios.get<Status[]>(apiLinkToServer);\n            set({ statuses: res.data, loading: false });\n        } catch (err: any) {\n            set({ error: err.message, loading: false });\n        }\n    },\n    fetchActiveStatuses: async () => {\n        set({ loading: true, error: null });\n        try {\n            const res = await axios.get<Status[]>(apiLinkToServer+\"/active\");\n            set({ statuses: res.data, loading: false });\n        } catch (err: any) {\n            set({ error: err.message, loading: false });\n        }\n    },\n\n    addStatus: async (Status: StatusInput) => {\n        set({ loading: true, error: null });\n        try {\n            await axios.post(apiLinkToServer, Status);\n            await get().fetchStatuses();\n        } catch (err: any) {\n            set({ error: err.message });\n        }\n        set({ loading: false });\n    },\n    updateStatus: async (Status: StatusInputEdit) => {\n        set({ loading: true, error: null });\n        try {\n            await axios.put(apiLinkToServer+\"/\"+Status.id, Status);\n            await get().fetchStatuses();\n        } catch (err: any) {\n            set({ error: err.message });\n        }\n        set({ loading: false });\n    },\n\n    deleteStatus: async (id: number) => {\n        set({ loading: true, error: null });\n        try {\n            await axios.delete(`${apiLinkToServer}/${id}`);\n            await get().fetchStatuses(); // обновим список\n        } catch (err: any) {\n            set({ error: err.message });\n        }\n        set({ loading: false });\n    },\n}));\n"],"names":["_ref","id","showDeleteModal","handleCloseDeleteModal","deleteStatus","useStatusStore","_jsxs","Modal","show","onHide","centered","children","_jsx","Header","closeButton","Title","Body","Footer","Button","variant","onClick","handleDelete","handleCloseEditSidePanel","status","fetchStatus","updateStatus","form","setForm","useState","name","active","sort","color","validated","setValidated","handleChange","e","_objectSpread","target","value","useEffect","Form","noValidate","onSubmit","async","data","currentTarget","preventDefault","checkValidity","stopPropagation","Col","className","Row","Group","controlId","Label","Control","required","type","placeholder","onChange","Feedback","Check","checked","label","showEditSidePanel","Offcanvas","placement","EditForm","List","statuses","fetchStatuses","setId","setShowDeleteModal","setShowEditSidePanel","_Fragment","Table","striped","bordered","hover","map","style","handleShowEditSidePanel","handleShowDeleteModal","DeleteModal","EditSidePanel","handleClose","addStatus","state","console","log","defaultValue","scroll","AddForm","Statuses","setShow","Container","BreadcrumbsComp","openPageName","handleShow","AddSidePanel","paths","useLocation","pathname","split","filter","Boolean","Breadcrumb","Item","linkAs","Link","linkProps","to","segment","index","path","slice","join","length","decodeURIComponent","_excluded","React","ref","bsPrefix","borderless","size","responsive","props","_objectWithoutProperties","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","responsiveClass","displayName","apiLinkToServer","SERVER_LINK","create","set","get","loading","error","created_at","res","axios","err","message","fetchActiveStatuses","post","Status","put","delete"],"sourceRoot":""}