{"version":3,"file":"static/js/564.9c215436.chunk.js","mappings":"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","sources":["components/construction/EditForm.tsx","components/construction/EditSidePanel.tsx","components/plan/DeleteModalPlan.tsx","components/plan/ListPlan.tsx","components/house/AddHouseForm.tsx","components/plan/AddPlanForm.tsx","components/SidePanel.tsx","components/house/DeleteModalHouse.tsx","components/house/EditHouseForm.tsx","components/house/EditSidePanel.tsx","components/house/ListHouse.tsx","pages/company/DetailConstruction.tsx","components/BreadcrumbsComp.tsx","components/plan/EditPlanForm.tsx","components/plan/EditSidePanel.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useConstructionStore} from \"../../store/useConstructionStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {ConstructionInputEdit} from \"../../types/Construction\";\n\ntype ConstructionEditFormProps = {\n    id:number,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditForm = ({id, handleCloseEditSidePanel}:ConstructionEditFormProps) => {\n    const {construction, fetchConstruction, updateConstruction} = useConstructionStore();\n    const [form, setForm] = useState<ConstructionInputEdit>({id:0, name: '', text: '', active:true, location:'', company_id: 0});\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await updateConstruction(form);\n        setForm({id:0, name: '', text: '', active: true, location:'', company_id: 0 });\n        handleCloseEditSidePanel()\n    };\n\n    useEffect(() => {\n        fetchConstruction(id);\n    }, []);\n    useEffect(() => {\n        setForm({id:id, name: construction?.name, text: construction?.text, active:construction?.active, company_id:construction?.company_id, location:construction?.location});\n    }, [construction]);\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Construction Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Construction Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Location</Form.Label>\n                        <Form.Control\n                            name=\"location\"\n                            type=\"text\"\n                            placeholder=\"Location\"\n                            value={form.location}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Check\n                            checked={form.active}\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"Active\"\n                            onChange={(e)=>setForm({...form, active: e.target.checked\n                            })}\n                        />\n                    </Form.Group>\n\n                </Row>\n                <Row className=\"mb-3 text-start\">\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label >Text</Form.Label>\n                        <Form.Control\n                            className=\"mb-3\"\n                            as=\"textarea\"\n                            rows={3}\n                            name=\"text\"\n                            value={form.text}\n                            onChange={handleChange}\n                        />\n                    </Form.Group>\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Update</Button>\n                <Button onClick={handleCloseEditSidePanel} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default EditForm;","import React from 'react';\r\nimport {Offcanvas} from \"react-bootstrap\";\r\nimport EditForm from \"./EditForm\";\r\n\r\ntype ConstructionEditSidePanelProps = {\r\n    id:number,\r\n    showEditSidePanel: boolean,\r\n    handleCloseEditSidePanel:()=>void\r\n}\r\n\r\nconst EditSidePanel = ({id, showEditSidePanel, handleCloseEditSidePanel }:ConstructionEditSidePanelProps) => {\r\n    return (\r\n        <Offcanvas show={showEditSidePanel} onHide={handleCloseEditSidePanel} placement={\"end\"} >\r\n            <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Edit Construction</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <EditForm id={id} handleCloseEditSidePanel={handleCloseEditSidePanel} />\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    );\r\n};\r\n\r\nexport default EditSidePanel;","import React from 'react';\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {Button, Modal} from \"react-bootstrap\";\n\ntype PlanDeleteModalProps = {\n    id:number,\n    construction_id: number,\n    showDeleteModal: boolean,\n    handleCloseDeleteModal:()=>void\n}\n\nconst DeleteModalPlan = ({id, construction_id, showDeleteModal, handleCloseDeleteModal}:PlanDeleteModalProps) => {\n    const { deletePlan  } = usePlanStore();\n    const handleDelete =() =>{\n        handleCloseDeleteModal();\n        deletePlan(id, construction_id);\n    }\n\n    return (\n        <Modal show={showDeleteModal} onHide={handleCloseDeleteModal} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>Warning</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure you want to delete the plan?</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\n                    Cancel\n                </Button>\n                <Button variant=\"danger\" onClick={handleDelete}>\n                    Delete\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default DeleteModalPlan;","import React, {useEffect, useState} from 'react';\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {Button, Table} from \"react-bootstrap\";\nimport {Link, useParams} from \"react-router-dom\";\nimport DeleteModalPlan from \"./DeleteModalPlan\";\nimport EditSidePanel from './EditSidePanel';\n\ntype PlanTableProps = {\n    construction_id: number;\n}\n\nconst ListPlan = ({construction_id}:PlanTableProps) => {\n    const { plans, fetchPlansInConstruction  } = usePlanStore();\n    const [id, setId] = useState(0);\n\n    const { company_id } = useParams<{company_id:string}>();\n\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n    const handleCloseDeleteModal = () => {\n        setShowDeleteModal(false);\n        setId(0);\n    }\n    const handleShowDeleteModal = (id:number) => {\n        setId(id);\n        setShowDeleteModal(true);\n    }\n\n\n    // Edit side panel state and handlers\n    const [showEditSidePanel, setShowEditSidePanel] = useState(false);\n    const handleCloseEditSidePanel = () => {\n        setShowEditSidePanel(false);\n        setId(0);\n    }\n    const handleShowEditSidePanel = (id: number) => {\n        setId(id);\n        setShowEditSidePanel(true);\n    }\n\n\n\n    useEffect(() => {\n        fetchPlansInConstruction(construction_id);\n    }, [construction_id]);\n\n    return (\n        <>\n\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th className=\"text-start\" >Name</th>\n                    <th>Created at</th>\n                    <th>Action</th>\n                </tr>\n                </thead>\n                <tbody>\n                {plans.map((plan) => (\n                    <tr className={!plan.active ? 'table-secondary text-muted' : ''} key={plan.id}>\n                        <td className={\"align-middle\"}>{plan.id}</td>\n                        <td className=\"text-start\">\n                            <Link to={`/companies/${company_id}/${plan.construction_id}/${plan.id}`}>\n                                {plan.name}\n                            </Link>\n                        </td>\n\n                        <td className=\"align-middle w-25\">{new Date(plan.created_at).toLocaleString()}</td>\n                        <td className={\"align-middle align-middle\"}>\n                            {/* Edit button opens side panel */}\n                            <Button variant=\"secondary\" className=\"m-1\" onClick={() => handleShowEditSidePanel(plan.id)}>\n                                <i className=\"bi bi-pencil\"></i>\n                            </Button>\n\n                            <Button className={\"m-1\"} variant=\"danger\" onClick={() => handleShowDeleteModal(plan.id)}>\n                                <i className=\"bi bi-trash\"></i>\n                            </Button>\n\n                        </td>\n                    </tr>\n                ))}\n\n                </tbody>\n            </Table>\n            <DeleteModalPlan\n                id={id}\n                construction_id={construction_id}\n                showDeleteModal={showDeleteModal}\n                handleCloseDeleteModal={handleCloseDeleteModal}\n            />\n            <EditSidePanel\n                id={id}\n                showEditSidePanel={showEditSidePanel}\n                handleCloseEditSidePanel={handleCloseEditSidePanel}\n            />\n\n        </>\n    );\n};\n\nexport default ListPlan;","import React, {useEffect, useState} from 'react';\nimport {useHouseStore} from \"../../store/useHouseStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {HouseInputAdd} from \"../../types/House\";\nimport {useConstructionStore} from \"../../store/useConstructionStore\";\nimport {usePlanStore} from \"../../store/usePlanStore\";\n\ntype HouseAddFormProps = {\n    handleClose:()=>void,\n}\n\nconst AddHouseForm = ({handleClose}:HouseAddFormProps) => {\n    const construction = useConstructionStore(state=> state.construction)\n    const [form, setForm] = useState<HouseInputAdd>({\n                                                                                                            name: 0,\n                                                                                                            construction_id: construction.id,\n                                                                                                            plan_id: '',\n                                                                                                            unit: '',\n                                                                                                            street: '',\n                                                                                                            state:'CA',\n                                                                                                            zip_code:'',\n                                                                                                            city:''\n                                                                                                            });\n    const [validated, setValidated] = useState(false);\n    const addHouse = useHouseStore(state=> state.addHouse)\n\n    const {plans, fetchPlansInConstruction} = usePlanStore();\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await addHouse(form);\n        setForm({ ...form, name:0, plan_id: '', unit: '', street: '', state:'CA', zip_code:'', city:'' });\n        handleClose()\n    };\n    useEffect(() => {\n        fetchPlansInConstruction(construction.id)\n    }, []);\n\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>House Name*</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"number\"\n                            placeholder=\"House Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationPlan\">\n                        <Form.Label>Plan*</Form.Label>\n                        <Form.Select\n                            required\n                            name=\"plan_id\"\n                            value={form.plan_id}\n                            onChange={handleChange}\n                        >\n                            <option value='' disabled hidden>Select a plan</option>\n                            {plans.map((plan)=>(\n                                <option value={plan.id}>{plan.name}</option>\n                            ))}\n\n\n                    </Form.Select>\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <h6>Address</h6>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Label>Street</Form.Label>\n                        <Form.Control\n                            name=\"street\"\n                            type=\"text\"\n                            placeholder=\"2557 Albatross Wy\"\n                            value={form.street}\n                            onChange={handleChange}\n                        />\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Col md={'6'} >\n                        <Form.Group>\n                            <Form.Label>Unit</Form.Label>\n                            <Form.Control\n                                name=\"unit\"\n                                type=\"text\"\n                                placeholder=\"Unit B\"\n                                value={form.unit}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col md={'6'} >\n                        <Form.Group>\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                name=\"city\"\n                                type=\"text\"\n                                placeholder=\"Sacramento\"\n                                value={form.city}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Col md={'6'} >\n                        <Form.Group>\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                name=\"state\"\n                                type=\"text\"\n                                placeholder=\"CA\"\n                                value={form.state}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col md={'6'} >\n                        <Form.Group>\n                            <Form.Label>Zip</Form.Label>\n                            <Form.Control\n                                name=\"zip_code\"\n                                type=\"text\"\n                                placeholder=\"95815\"\n                                value={form.zip_code}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                    </Col>\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Create</Button>\n                <Button onClick={handleClose} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default AddHouseForm;","import React, {useState} from 'react';\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {PlanInputAdd} from \"../../types/Plan\";\nimport {useConstructionStore} from \"../../store/useConstructionStore\";\n\ntype PlanAddFormProps = {\n    handleClose:()=>void,\n}\n\nconst AddPlanForm = ({handleClose}:PlanAddFormProps) => {\n    const construction = useConstructionStore(state=> state.construction)\n    const [form, setForm] = useState<PlanInputAdd>({ name: '', construction_id: construction.id});\n    const [validated, setValidated] = useState(false);\n    const addPlan = usePlanStore(state=> state.addPlan)\n\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await addPlan(form);\n        setForm({ ...form, name:''});\n        handleClose()\n    };\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Plan Name*</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Plan Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Create</Button>\n                <Button onClick={handleClose} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default AddPlanForm;","import React from 'react';\nimport {Offcanvas} from \"react-bootstrap\";\nimport AddHouseForm from \"./house/AddHouseForm\";\nimport AddPlanForm from \"./plan/AddPlanForm\";\n\n\ntype AddSidePanelProps ={\n    nameAction: string,\n    show:boolean,\n    handleClose: ()=>void,\n}\n\nconst SidePanel = ({nameAction, show, handleClose}:AddSidePanelProps) => {\n    let form = <h2>Error</h2>\n    switch (nameAction) {\n        case \"Create House\":\n            form =<AddHouseForm handleClose={handleClose} />;\n            break;\n        case \"Create Plan\":\n            form =<AddPlanForm handleClose={handleClose} />\n            break;\n    }\n\n\n    return (\n        <Offcanvas show={show} placement={\"end\"} onHide={handleClose} scroll={true} >\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>{nameAction}</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                {form}\n            </Offcanvas.Body>\n        </Offcanvas>\n    );\n};\n\nexport default SidePanel;","import React from 'react';\nimport {useHouseStore} from \"../../store/useHouseStore\";\nimport {Button, Modal} from \"react-bootstrap\";\n\ntype HouseDeleteModalProps = {\n    id:number,\n    construction_id: number,\n    showDeleteModal: boolean,\n    handleCloseDeleteModal:()=>void\n}\n\nconst DeleteModalHouse = ({id, construction_id, showDeleteModal, handleCloseDeleteModal}:HouseDeleteModalProps) => {\n    const { deleteHouse  } = useHouseStore();\n    const handleDelete =() =>{\n        handleCloseDeleteModal();\n        deleteHouse(id, construction_id);\n    }\n\n    return (\n        <Modal show={showDeleteModal} onHide={handleCloseDeleteModal} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>Warning</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure you want to delete the house?</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\n                    Cancel\n                </Button>\n                <Button variant=\"danger\" onClick={handleDelete}>\n                    Delete\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default DeleteModalHouse;","import React, {useEffect, useState} from 'react';\nimport {useHouseStore} from \"../../store/useHouseStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {HouseInputEdit} from \"../../types/House\";\nimport {usePlanStore} from \"../../store/usePlanStore\";\n\ntype HouseEditFormProps = {\n    id:number,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditHouseForm = ({id, handleCloseEditSidePanel}:HouseEditFormProps) => {\n    const {house, fetchHouse, updateHouse} = useHouseStore();\n    const [form, setForm] = useState<HouseInputEdit>({id:0, name: 0, active:true, construction_id: 0, plan_id:0, state:'CA', city:'', street:'', unit:'', zip_code:''});\n    const {plans, fetchPlansInConstruction} = usePlanStore();\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await updateHouse(form);\n        setForm({id:0, name: 0, active: true,  construction_id: 0, plan_id: 0, state:'CA', city:'', street:'', unit:'', zip_code:'' });\n        handleCloseEditSidePanel()\n    };\n\n    useEffect(() => {\n        fetchHouse(id);\n    }, []);\n    useEffect(() => {\n        setForm({...house});\n        fetchPlansInConstruction(house.construction_id)\n    }, [house]);\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>House Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"number\"\n                            placeholder=\"House Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationPlan\">\n                        <Form.Label>Plan*</Form.Label>\n                        <Form.Select\n                            required\n                            name=\"plan_id\"\n                            value={form.plan_id}\n                            onChange={handleChange}\n                        >\n                            <option value='' disabled hidden>Select a plan</option>\n                            {plans.map((plan)=>(\n                                <option value={plan.id}>{plan.name}</option>\n                            ))}\n\n\n                        </Form.Select>\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Check\n                            checked={form.active}\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"Active\"\n                            onChange={(e) => setForm({\n                                ...form, active: e.target.checked\n                            })}\n                        />\n                    </Form.Group>\n\n                </Row>\n\n                <h6>Address</h6>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Label>Street</Form.Label>\n                        <Form.Control\n                            name=\"street\"\n                            type=\"text\"\n                            placeholder=\"2557 Albatross Wy\"\n                            value={form.street}\n                            onChange={handleChange}\n                        />\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Col md={'6'}>\n                        <Form.Group>\n                            <Form.Label>Unit</Form.Label>\n                            <Form.Control\n                                name=\"unit\"\n                                type=\"text\"\n                                placeholder=\"Unit B\"\n                                value={form.unit}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col md={'6'}>\n                        <Form.Group>\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                name=\"city\"\n                                type=\"text\"\n                                placeholder=\"Sacramento\"\n                                value={form.city}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Col md={'6'}>\n                        <Form.Group>\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                name=\"state\"\n                                type=\"text\"\n                                placeholder=\"CA\"\n                                value={form.state}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col md={'6'}>\n                        <Form.Group>\n                            <Form.Label>Zip</Form.Label>\n                            <Form.Control\n                                name=\"zip_code\"\n                                type=\"text\"\n                                placeholder=\"95815\"\n                                value={form.zip_code}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                    </Col>\n                </Row>\n\n\n                <Button className={\"mx-1\"} type=\"submit\">Update</Button>\n                <Button onClick={handleCloseEditSidePanel} className={\"mx-1\"} variant={\"danger\"}>Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default EditHouseForm;","import React from 'react';\nimport {Offcanvas} from \"react-bootstrap\";\nimport EditHouseForm from \"./EditHouseForm\";\n\ntype HouseEditSidePanelProps = {\n    id:number,\n    showEditSidePanel: boolean,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditSidePanel = ({id, showEditSidePanel, handleCloseEditSidePanel }:HouseEditSidePanelProps) => {\n    return (\n        <Offcanvas show={showEditSidePanel} onHide={handleCloseEditSidePanel} placement={\"end\"} >\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>Edit House</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                <EditHouseForm id={id} handleCloseEditSidePanel={handleCloseEditSidePanel} />\n            </Offcanvas.Body>\n        </Offcanvas>\n    );\n};\n\nexport default EditSidePanel;","import React, {useEffect, useState} from 'react';\nimport {useHouseStore} from \"../../store/useHouseStore\";\nimport {Button, Card, Table} from \"react-bootstrap\";\nimport {Link, useParams} from \"react-router-dom\";\nimport DeleteModal from \"./DeleteModalHouse\";\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {useMediaQuery} from \"react-responsive\";\nimport EditSidePanel from \"./EditSidePanel\";\n\ntype HouseTableProps = {\n    construction_id: number;\n}\n\nconst ListHouse = ({construction_id}:HouseTableProps) => {\n    const { houses, fetchHousesInConstruction, housesStatuses,fetchHousesStatuses  } = useHouseStore();\n    const{plans}=usePlanStore();\n    const isMobile = useMediaQuery({ maxWidth: 767 });\n\n    const [id, setId] = useState(0);\n\n    const { company_id } = useParams<{company_id:string}>();\n\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n    const handleCloseDeleteModal = () => {\n        setShowDeleteModal(false);\n        setId(0);\n    }\n    const handleShowDeleteModal = (id:number) => {\n        setId(id);\n        setShowDeleteModal(true);\n    }\n\n\n    // Edit side panel state and handlers\n    const [showEditSidePanel, setShowEditSidePanel] = useState(false);\n    const handleCloseEditSidePanel = () => {\n        setShowEditSidePanel(false);\n        setId(0);\n    }\n    const handleShowEditSidePanel = (id: number) => {\n        setId(id);\n        setShowEditSidePanel(true);\n    }\n\n\n\n    useEffect(() => {\n        fetchHousesInConstruction(construction_id);\n    }, [construction_id]);\n    useEffect(() => {\n        fetchHousesStatuses(construction_id);\n    }, [houses]);\n\n\n    if (!isMobile) {\n        return (\n            <>\n\n                <Table striped bordered hover responsive=\"sm\">\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th className=\"text-start\">Name</th>\n                        <th>Plan</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {houses.map((house) => (\n                        <tr className={!house.active ? 'table-secondary text-muted' : ''} key={house.id}>\n                            <td className={\"align-middle\"}>{house.id}</td>\n                            <td className=\"text-start align-middle\">\n                                <b>Lot {house.name}</b>\n\n\n                                {(house.street && house.city && house.zip_code) &&\n                                    <>\n                                        <hr></hr>\n                                        <span className=\"text-start me-2 d-block\">Address:</span>\n                                        <a href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(`${house.street} ${house.unit}, ${house.city}, ${house.state} ${house.zip_code}, USA`)}`}\n                                           target=\"_blank\" rel=\"noopener noreferrer\">\n                                            {house.street} {house.unit}, {house.city}, {house.state} {house.zip_code},\n                                            USA\n                                        </a>\n                                    </>}\n\n                            </td>\n\n                            <td className={\"align-middle\"}>\n\n                                {(() => {\n                                    const plan = plans.find(plan => plan.id === house.plan_id);\n                                    return plan ? (\n                                        <Link to={`/companies/${company_id}/${house.construction_id}/${plan.id}`}>\n                                            {plan.name}\n                                        </Link>\n                                    ) : (\n                                        'Unknown'\n                                    );\n                                })()}\n                            </td>\n                            <td className={\"align-middle\"}>\n\n                                {housesStatuses.filter(houseStatuses => houseStatuses.house_id === house.id)?.map((houseStatuses, index) => (\n                                    <span\n                                        key={index}\n                                        className=\"badge text-white px-2 py-1 m-1\"\n                                        style={{backgroundColor: houseStatuses.status_color, fontSize: '0.9rem'}}\n                                    >\n                                  <strong>{houseStatuses.type_of_work_name}:</strong> {houseStatuses.status_name}\n                                </span>\n                                ))}\n                            </td>\n                            <td className={\"align-middle\"}>\n                                {/* Edit button opens side panel */}\n                                <Button variant=\"secondary\" className=\"m-1\"\n                                        onClick={() => handleShowEditSidePanel(house.id)}>\n                                    <i className=\"bi bi-pencil\"></i>\n                                </Button>\n                                {(house.street && house.city && house.zip_code) &&\n                                    <Button\n                                        className={\"m-1\"}\n                                        variant=\"secondary\"\n                                        href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(`${house.street} ${house.unit}, ${house.city}, ${house.state} ${house.zip_code}, USA`)}`}\n                                        target=\"_blank\"\n                                    >\n                                        <i className=\"bi bi-geo-alt-fill\"></i>\n                                    </Button> }\n                                <Button className={\"m-1\"} variant=\"danger\"\n                                        onClick={() => handleShowDeleteModal(house.id)}>\n                                    <i className=\"bi bi-trash\"></i>\n                                </Button>\n\n                            </td>\n                        </tr>\n                    ))}\n\n                    </tbody>\n                </Table>\n                <DeleteModal\n                    id={id}\n                    construction_id={construction_id}\n                    showDeleteModal={showDeleteModal}\n                    handleCloseDeleteModal={handleCloseDeleteModal}\n                />\n                <EditSidePanel\n                    id={id}\n                    showEditSidePanel={showEditSidePanel}\n                    handleCloseEditSidePanel={handleCloseEditSidePanel}\n                />\n\n            </>\n        );\n    }else{\n        return (\n            <>\n                {houses.map(house => (\n                <Card key={house.id} className=\"mb-2\">\n                    <Card.Body>\n                        <strong>Lot {house.name}</strong>\n                        <div>\n                            <span className={\"me-2\"}>Plan:</span>\n                            {(() => {\n                                const plan = plans.find(plan => plan.id === house.plan_id);\n                                return plan ? (\n                                    <Link to={`/companies/${company_id}/${house.construction_id}/${plan.id}`}>\n                                        {plan.name}\n                                    </Link>\n                                ) : (\n                                    'Unknown'\n                                );\n                            })()}\n                        </div>\n                        {(house.street && house.city && house.zip_code) &&\n                            <div>\n                                <span className=\"text-start me-2 d-block\">Address:</span>\n                                <a href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(`${house.street} ${house.unit}, ${house.city}, ${house.state} ${house.zip_code}, USA`)}`}\n                                   target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {house.street} {house.unit}, {house.city}, {house.state} {house.zip_code},\n                                    USA\n                                </a>\n                            </div>}\n                        <hr></hr>\n                        <div>\n                            <span className={\"d-block\"}>Statuses:</span>\n                            {housesStatuses.filter(houseStatuses => houseStatuses.house_id === house.id)?.map((houseStatuses, index) => (\n                                <span\n                                    key={index}\n                                    className=\"badge text-white px-2 py-1 m-1\"\n                                    style={{backgroundColor: houseStatuses.status_color, fontSize: '0.9rem'}}\n                                >\n                                  <strong>{houseStatuses.type_of_work_name}:</strong> {houseStatuses.status_name}\n                                </span>\n                            ))}\n                        </div>\n                        <hr></hr>\n                        <div className={\"d-flex justify-content-center\"}>\n                            {/* Edit button opens side panel */}\n                            <Button variant=\"secondary\" className=\"m-1 px-4\"\n                                    onClick={() => handleShowEditSidePanel(house.id)}>\n                                <i className=\"bi bi-pencil\"></i>\n                            </Button>\n                            {(house.street && house.city && house.zip_code) &&\n                                <Button\n                                    className={\"m-1 px-4\"}\n                                    variant=\"secondary\"\n                                    href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(`${house.street} ${house.unit}, ${house.city}, ${house.state} ${house.zip_code}, USA`)}`}\n                                    target=\"_blank\"\n                                >\n                                    <i className=\"bi bi-geo-alt-fill\"></i>\n                                </Button> }\n                            <Button className={\"m-1 px-4\"} variant=\"danger\"\n                                    onClick={() => handleShowDeleteModal(house.id)}>\n                                <i className=\"bi bi-trash\"></i>\n                            </Button>\n                        </div>\n                    </Card.Body>\n                </Card>\n                ))}\n                <DeleteModal\n                    id={id}\n                    construction_id={construction_id}\n                    showDeleteModal={showDeleteModal}\n                    handleCloseDeleteModal={handleCloseDeleteModal}\n                />\n                <EditSidePanel\n                    id={id}\n                    showEditSidePanel={showEditSidePanel}\n                    handleCloseEditSidePanel={handleCloseEditSidePanel}\n                />\n            </>\n        )\n    }\n\n};\n\nexport default ListHouse;","import React, {useEffect, useState} from 'react';\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {useConstructionStore} from \"../../store/useConstructionStore\";\nimport {Alert, Button, Container, Tab, Tabs} from \"react-bootstrap\";\nimport BreadcrumbsComp from \"../../components/BreadcrumbsComp\";\nimport EditSidePanel from \"../../components/construction/EditSidePanel\";\nimport ListPlan from \"../../components/plan/ListPlan\";\nimport SidePanel from \"../../components/SidePanel\";\nimport ListHouse from \"../../components/house/ListHouse\";\n\nconst DetailConstruction = () => {\n    const { company_id, id } = useParams<{company_id:string, id: string }>();\n    const numberId= Number(id);\n    const numberCompanyId= Number(company_id);\n    const {construction, fetchConstruction} =useConstructionStore();\n    const navigate = useNavigate();\n\n    const [showEditSidePanel, setShowEditSidePanel] = useState(false);\n    const handleCloseEditSidePanel = () => {\n        setShowEditSidePanel(false);\n    }\n    const handleShowEditSidePanel = (numberId:number) => {\n        setShowEditSidePanel(true);\n    }\n\n    const [show, setShow] = useState(false);\n    const [nameAction, setNameAction] = useState(\"\");\n    const handleClose = () => setShow(false);\n    const handleShow = (nameAction:string) =>{\n        setNameAction(nameAction);\n        setShow(true);\n    }\n\n\n    useEffect(() => {\n        fetchConstruction(numberId);\n    }, [showEditSidePanel]);\n    return (\n        <>\n            <Container>\n                <h1>{construction.name} </h1>\n                <hr></hr>\n                <Button className={\"me-2\"} variant=\"outline-secondary\"\n                        onClick={() => navigate(`/companies/${numberCompanyId}`)}>\n                    <i className=\"bi bi-arrow-left-circle\"></i>\n                </Button>\n                {construction.location &&\n                    <Button className={\"mx-1\"} variant=\"outline-secondary\" href={construction.location} target=\"_blank\">\n                        <i className=\"bi bi-geo-alt-fill me-2\"></i>\n                        Location\n                    </Button>}\n                <Button className={\"ms-3\"} variant={\"outline-secondary\"}\n                        onClick={() => handleShowEditSidePanel(construction.id)}>\n                    <i className=\"bi bi-pencil me-2\"></i>\n                    Edit\n                </Button>\n                <hr></hr>\n                <BreadcrumbsComp openPageName ={construction.name}/>\n                {!construction.active &&\n                    <Alert key={'secondary'} variant={'secondary'}>\n                        Not active!\n                    </Alert>}\n                <hr></hr>\n\n\n                <Tabs\n                    defaultActiveKey=\"Houses\"\n                    id=\"uncontrolled-tab-example\"\n                    className=\"mb-3\"\n                >\n                    <Tab eventKey={\"Houses\"} title={\"Houses\"} key={\"Houses\"}>\n                        <div>\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                <h4>Houses</h4>\n                                <Button variant=\"primary\"  onClick={()=>handleShow(\"Create House\")}>\n                                    <i className=\"me-2 bi bi-plus-circle\"></i>\n                                    Add House\n                                </Button>\n                            </div>\n                            <ListHouse construction_id={construction.id}/>\n                        </div>\n                    </Tab>\n                    <Tab eventKey={\"Plans\"} title={\"Plans\"} key={\"Plans\"}>\n                        <div>\n                            <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                <h4>Plans</h4>\n                                <Button variant=\"primary\" onClick={()=>handleShow(\"Create Plan\")}>\n                                    <i className=\"me-2 bi bi-plus-circle\"></i>\n                                    Add Plan\n                                </Button>\n                            </div>\n                            <ListPlan construction_id={construction.id}/>\n                        </div>\n                    </Tab>\n                </Tabs>\n\n            </Container>\n            <SidePanel nameAction={nameAction} show={show} handleClose={handleClose} />\n            <EditSidePanel id={numberId} showEditSidePanel={showEditSidePanel}\n                           handleCloseEditSidePanel={handleCloseEditSidePanel}/>\n\n        </>\n\n    );\n};\n\nexport default DetailConstruction;","import { Breadcrumb } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\n\ntype BreadcrumbsCompProps ={\n    openPageName : string\n}\n\nconst BreadcrumbsComp = ({openPageName}:BreadcrumbsCompProps) => {\n    const location = useLocation();\n    const paths = location.pathname.split('/').filter(Boolean);\n\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item linkAs={Link} linkProps={{ to: '/' }}>\n                Home\n            </Breadcrumb.Item>\n\n            {paths.map((segment, index) => {\n                const path = '/' + paths.slice(0, index + 1).join('/');\n                const isLast = index === paths.length - 1;\n\n                return isLast ? (\n                    <Breadcrumb.Item active key={path}>\n                        {openPageName}\n                    </Breadcrumb.Item>\n                ) : (\n                    <Breadcrumb.Item linkAs={Link} linkProps={{ to: path }} key={path}>\n                        {decodeURIComponent(segment)}\n                    </Breadcrumb.Item>\n                );\n            })}\n        </Breadcrumb>\n    );\n};\n\nexport default BreadcrumbsComp;\n","import React, {useEffect, useState} from 'react';\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {PlanInputEdit} from \"../../types/Plan\";\n\ntype PlanEditFormProps = {\n    id:number,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditPlanForm = ({id, handleCloseEditSidePanel}:PlanEditFormProps) => {\n    const {plan, fetchPlan, updatePlan} = usePlanStore();\n    const [form, setForm] = useState<PlanInputEdit>({id:0, name: '', active:true, construction_id: 0});\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await updatePlan(form);\n        setForm({id:0, name: '', active: true,  construction_id: 0 });\n        handleCloseEditSidePanel()\n    };\n\n    useEffect(() => {\n        fetchPlan(id);\n    }, []);\n    useEffect(() => {\n        setForm({id:id, name: plan?.name, active:plan?.active, construction_id:plan?.construction_id});\n    }, [plan]);\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Plan Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Plan Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Check\n                            checked={form.active}\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"Active\"\n                            onChange={(e)=>setForm({...form, active: e.target.checked\n                            })}\n                        />\n                    </Form.Group>\n\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Update</Button>\n                <Button onClick={handleCloseEditSidePanel} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default EditPlanForm;","import React from 'react';\nimport {Offcanvas} from \"react-bootstrap\";\nimport EditPlanForm from \"./EditPlanForm\";\n\ntype PlanEditSidePanelProps = {\n    id:number,\n    showEditSidePanel: boolean,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditSidePanel = ({id, showEditSidePanel, handleCloseEditSidePanel }:PlanEditSidePanelProps) => {\n    return (\n        <Offcanvas show={showEditSidePanel} onHide={handleCloseEditSidePanel} placement={\"end\"} >\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>Edit Plan</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                <EditPlanForm id={id} handleCloseEditSidePanel={handleCloseEditSidePanel} />\n            </Offcanvas.Body>\n        </Offcanvas>\n    );\n};\n\nexport default EditSidePanel;"],"names":["_ref","id","handleCloseEditSidePanel","construction","fetchConstruction","updateConstruction","useConstructionStore","form","setForm","useState","name","text","active","location","company_id","validated","setValidated","handleChange","e","_objectSpread","target","value","useEffect","_jsx","Form","noValidate","onSubmit","async","data","currentTarget","preventDefault","checkValidity","stopPropagation","children","_jsxs","Col","className","Row","Group","controlId","Label","Control","required","type","placeholder","onChange","Feedback","Check","checked","label","as","rows","Button","onClick","variant","showEditSidePanel","Offcanvas","show","onHide","placement","Header","closeButton","Title","Body","EditForm","construction_id","showDeleteModal","handleCloseDeleteModal","deletePlan","usePlanStore","Modal","centered","Footer","handleDelete","plans","fetchPlansInConstruction","setId","useParams","setShowDeleteModal","setShowEditSidePanel","_Fragment","Table","striped","bordered","hover","map","plan","Link","to","concat","Date","created_at","toLocaleString","handleShowEditSidePanel","handleShowDeleteModal","DeleteModalPlan","EditSidePanel","handleClose","state","plan_id","unit","street","zip_code","city","addHouse","useHouseStore","Select","disabled","hidden","md","addPlan","nameAction","AddHouseForm","AddPlanForm","scroll","deleteHouse","house","fetchHouse","updateHouse","EditHouseForm","houses","fetchHousesInConstruction","housesStatuses","fetchHousesStatuses","isMobile","useMediaQuery","maxWidth","_housesStatuses$filte2","Card","find","href","encodeURIComponent","rel","filter","houseStatuses","house_id","index","style","backgroundColor","status_color","fontSize","type_of_work_name","status_name","DeleteModal","responsive","_housesStatuses$filte","DetailConstruction","numberId","Number","numberCompanyId","navigate","useNavigate","setShow","setNameAction","handleShow","Container","BreadcrumbsComp","openPageName","Alert","Tabs","defaultActiveKey","Tab","eventKey","title","ListHouse","ListPlan","SidePanel","paths","useLocation","pathname","split","Boolean","Breadcrumb","Item","linkAs","linkProps","segment","path","slice","join","length","decodeURIComponent","fetchPlan","updatePlan","EditPlanForm"],"sourceRoot":""}