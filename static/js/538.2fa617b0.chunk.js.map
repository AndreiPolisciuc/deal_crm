{"version":3,"file":"static/js/538.2fa617b0.chunk.js","mappings":"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","sources":["components/BreadcrumbsComp.tsx","../node_modules/react-bootstrap/esm/Table.js","components/company/AddForm.tsx","components/company/AddSidePanel.tsx","components/company/DeleteModal.tsx","components/company/List.tsx","pages/company/ListCompanies.tsx","components/company/EditForm.tsx","components/company/EditSidePanel.tsx"],"sourcesContent":["import { Breadcrumb } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\n\ntype BreadcrumbsCompProps ={\n    openPageName : string\n}\n\nconst BreadcrumbsComp = ({openPageName}:BreadcrumbsCompProps) => {\n    const location = useLocation();\n    const paths = location.pathname.split('/').filter(Boolean);\n\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item linkAs={Link} linkProps={{ to: '/' }}>\n                Home\n            </Breadcrumb.Item>\n\n            {paths.map((segment, index) => {\n                const path = '/' + paths.slice(0, index + 1).join('/');\n                const isLast = index === paths.length - 1;\n\n                return isLast ? (\n                    <Breadcrumb.Item active key={path}>\n                        {openPageName}\n                    </Breadcrumb.Item>\n                ) : (\n                    <Breadcrumb.Item linkAs={Link} linkProps={{ to: path }} key={path}>\n                        {decodeURIComponent(segment)}\n                    </Breadcrumb.Item>\n                );\n            })}\n        </Breadcrumb>\n    );\n};\n\nexport default BreadcrumbsComp;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nTable.displayName = 'Table';\nexport default Table;","import React, { useState} from 'react';\r\nimport { CompanyInput } from '../../types/Company';\r\nimport { useCompanyStore } from '../../store/useCompanyStore';\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\n\r\ntype CompanyFormProps = {\r\n    handleClose:()=>void\r\n}\r\n\r\nconst AddForm: React.FC<CompanyFormProps> = ({handleClose}) => {\r\n    const [form, setForm] = useState<CompanyInput>({ name: '', text: '' });\r\n    const [validated, setValidated] = useState(false);\r\n    const addCompany = useCompanyStore(state => state.addCompany);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        const data = e.currentTarget as HTMLFormElement;\r\n        e.preventDefault();\r\n\r\n        if (data.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n        setValidated(true);\r\n        if (data.checkValidity() === false) return;\r\n\r\n        await addCompany(form);\r\n        setForm({ name: '', text: '' });\r\n        handleClose()\r\n    };\r\n\r\n    return (\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Col className=\"mb-3 text-start \">\r\n                <Row className=\"mb-3 text-start \">\r\n                    <Form.Group controlId=\"validationCustom01\">\r\n                        <Form.Label>Company name*</Form.Label>\r\n                        <Form.Control\r\n                            name=\"name\"\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Company Name\"\r\n                            value={form.name}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className=\"mb-3 text-start\">\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label >Text</Form.Label>\r\n                        <Form.Control\r\n                            className=\"mb-3\"\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            name=\"text\"\r\n                            value={form.text}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                </Row>\r\n\r\n                <Button className={\"mx-1\"}  type=\"submit\">Create</Button>\r\n                <Button onClick={handleClose} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\r\n            </Col>\r\n        </Form>\r\n\r\n    );\r\n};\r\n\r\nexport default AddForm;","import React from 'react';\r\nimport {Offcanvas} from \"react-bootstrap\";\r\nimport AddForm from \"./AddForm\";\r\n\r\ntype CompanyProps = {\r\n    show:boolean,\r\n    handleClose: ()=>void\r\n}\r\n\r\nconst AddSidePanel = ({show, handleClose}:CompanyProps) => {\r\n\r\n    return (\r\n\r\n        <Offcanvas show={show} placement={\"end\"} onHide={handleClose} scroll={true} >\r\n            <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Create Company</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <AddForm handleClose={handleClose} />\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    );\r\n};\r\n\r\nexport default AddSidePanel;","import React from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport {useCompanyStore} from \"../../store/useCompanyStore\";\r\n\r\ntype DeleteModalProps = {\r\n    id:number,\r\n    showDeleteModal: boolean,\r\n    handleCloseDeleteModal:()=>void\r\n}\r\n\r\nconst DeleteModal = ({id, showDeleteModal, handleCloseDeleteModal}:DeleteModalProps) => {\r\n\r\n    const { deleteCompany  } = useCompanyStore();\r\n    const handleDelete =() =>{\r\n        handleCloseDeleteModal();\r\n        deleteCompany(id);\r\n    }\r\n    return (\r\n\r\n        <Modal show={showDeleteModal} onHide={handleCloseDeleteModal} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Warning</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Are you sure you want to delete the company?</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Delete\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DeleteModal;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport { useCompanyStore } from '../../store/useCompanyStore';\r\nimport { Link } from \"react-router-dom\";\r\nimport DeleteModal from \"./DeleteModal\";\r\nimport EditSidePanel from \"./EditSidePanel\";\r\n\r\nconst List = () => {\r\n    // Destructure state and action from company store\r\n    const { companies, fetchCompanies } = useCompanyStore();\r\n\r\n    // ID used for editing or deleting a company\r\n    const [id, setId] = useState(0);\r\n\r\n    // Delete modal state and handlers\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const handleCloseDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n        setId(0);\r\n    }\r\n    const handleShowDeleteModal = (id: number) => {\r\n        setId(id);\r\n        setShowDeleteModal(true);\r\n    }\r\n\r\n    // Edit side panel state and handlers\r\n    const [showEditSidePanel, setShowEditSidePanel] = useState(false);\r\n    const handleCloseEditSidePanel = () => {\r\n        setShowEditSidePanel(false);\r\n        setId(0);\r\n    }\r\n    const handleShowEditSidePanel = (id: number) => {\r\n        setId(id);\r\n        setShowEditSidePanel(true);\r\n    }\r\n\r\n    // Fetch company data on component mount\r\n    useEffect(() => {\r\n        fetchCompanies();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th className=\"text-start\">Name</th>\r\n                    <th>Created at</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {companies.map((company) => (\r\n                    // Apply gray style to inactive companies\r\n                    <tr className={!company.active ? 'table-secondary text-muted' : ''} key={company.id}>\r\n                        <td>{company.id}</td>\r\n                        <td className=\"text-start\">\r\n                            {/* Link to company detail page */}\r\n                            <Link to={`/companies/${company.id}`}>\r\n                                {company.name}\r\n                            </Link>\r\n                        </td>\r\n                        {/* Format the creation date */}\r\n                        <td className=\"w-25\">{new Date(company.created_at).toLocaleString()}</td>\r\n                        <td>\r\n                            {/* Edit button opens side panel */}\r\n                            <Button variant=\"secondary\" className=\"m-1\" onClick={() => handleShowEditSidePanel(company.id)}>\r\n                                <i className=\"bi bi-pencil\"></i>\r\n                            </Button>\r\n\r\n                            {/* Delete button opens modal */}\r\n                            <Button variant=\"danger\" className=\"m-1\" onClick={() => handleShowDeleteModal(company.id)}>\r\n                                <i className=\"bi bi-trash\"></i>\r\n                            </Button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n\r\n            {/* Delete confirmation modal */}\r\n            <DeleteModal\r\n                id={id}\r\n                showDeleteModal={showDeleteModal}\r\n                handleCloseDeleteModal={handleCloseDeleteModal}\r\n            />\r\n\r\n            {/* Edit side panel */}\r\n            <EditSidePanel\r\n                id={id}\r\n                showEditSidePanel={showEditSidePanel}\r\n                handleCloseEditSidePanel={handleCloseEditSidePanel}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","import React, {useState} from 'react';\nimport {Button, Container} from \"react-bootstrap\";\nimport AddSidePanel from \"../../components/company/AddSidePanel\";\nimport List from \"../../components/company/List\";\nimport BreadcrumbsComp from \"../../components/BreadcrumbsComp\";\n\nconst ListCompanies = () => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Container>\n                <h1>Companies Page</h1>\n                <BreadcrumbsComp openPageName ={\"Companies Page\"}/>\n                <div className={'d-flex justify-content-end'}>\n                    <Button className={\"mb-3\"} variant=\"primary\" onClick={handleShow}>\n                        <i className=\"me-2 bi bi-plus-circle\"></i>\n                        Add Company\n                    </Button>\n                </div>\n\n                <List/>\n            </Container>\n            <AddSidePanel show={show} handleClose={handleClose}  />\n        </>\n\n    );\n};\n\nexport default ListCompanies;","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport { CompanyInputEdit} from \"../../types/Company\";\nimport {useCompanyStore} from \"../../store/useCompanyStore\";\n\ntype CompanyEditFormProps = {\n    id:number,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditForm = ({id, handleCloseEditSidePanel}:CompanyEditFormProps) => {\n    const { company, fetchCompany, updateCompany  } = useCompanyStore();\n    const [form, setForm] = useState<CompanyInputEdit>({id:0, name: '', text: '', active:true});\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await updateCompany(form);\n        setForm({id:0, name: '', text: '', active: true });\n        handleCloseEditSidePanel()\n    };\n\n    useEffect(() => {\n        fetchCompany(id);\n    }, []);\n    useEffect(() => {\n        setForm({id:id, name: company?.name, text: company?.text, active:company?.active});\n    }, [company]);\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Company Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Company Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Check\n                            checked={form.active}\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"Active\"\n                            onChange={(e)=>setForm({...form, active: e.target.checked\n                            })}\n                        />\n                    </Form.Group>\n\n                </Row>\n                <Row className=\"mb-3 text-start\">\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label >Text</Form.Label>\n                        <Form.Control\n                            className=\"mb-3\"\n                            as=\"textarea\"\n                            rows={3}\n                            name=\"text\"\n                            value={form.text}\n                            onChange={handleChange}\n                        />\n                    </Form.Group>\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Update</Button>\n                <Button onClick={handleCloseEditSidePanel} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default EditForm;","import React from 'react';\r\nimport {Offcanvas} from \"react-bootstrap\";\r\nimport EditForm from \"./EditForm\";\r\n\r\ntype EditSidePanelProps = {\r\n    id:number,\r\n    showEditSidePanel: boolean,\r\n    handleCloseEditSidePanel:()=>void\r\n}\r\n\r\n\r\nconst EditSidePanel = ({id, showEditSidePanel, handleCloseEditSidePanel }:EditSidePanelProps) => {\r\n    return (\r\n        <Offcanvas show={showEditSidePanel} onHide={handleCloseEditSidePanel} placement={\"end\"} >\r\n            <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Edit Company</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <EditForm id={id} handleCloseEditSidePanel={handleCloseEditSidePanel} />\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    );\r\n};\r\n\r\nexport default EditSidePanel;"],"names":["_ref","openPageName","paths","useLocation","pathname","split","filter","Boolean","_jsxs","Breadcrumb","children","_jsx","Item","linkAs","Link","linkProps","to","map","segment","index","path","slice","join","length","active","decodeURIComponent","_excluded","Table","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutProperties","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","_objectSpread","responsiveClass","displayName","handleClose","form","setForm","useState","name","text","validated","setValidated","addCompany","useCompanyStore","state","handleChange","e","target","value","Form","noValidate","onSubmit","async","data","currentTarget","preventDefault","checkValidity","stopPropagation","Col","Row","Group","controlId","Label","Control","required","type","placeholder","onChange","Feedback","as","rows","Button","onClick","show","Offcanvas","placement","onHide","scroll","Header","closeButton","Title","Body","AddForm","id","showDeleteModal","handleCloseDeleteModal","deleteCompany","Modal","centered","Footer","handleDelete","List","companies","fetchCompanies","setId","setShowDeleteModal","showEditSidePanel","setShowEditSidePanel","useEffect","_Fragment","company","Date","created_at","toLocaleString","handleShowEditSidePanel","handleShowDeleteModal","DeleteModal","EditSidePanel","handleCloseEditSidePanel","ListCompanies","setShow","Container","BreadcrumbsComp","handleShow","AddSidePanel","fetchCompany","updateCompany","Check","checked","label","EditForm"],"sourceRoot":""}