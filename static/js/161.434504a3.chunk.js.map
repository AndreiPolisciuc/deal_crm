{"version":3,"file":"static/js/161.434504a3.chunk.js","mappings":"iNAUA,MA+FA,EA/FiBA,IAA+D,IAA9D,GAACC,EAAE,yBAAEC,GAAmDF,EACtE,MAAM,aAACG,EAAY,kBAAEC,EAAiB,mBAAEC,IAAsBC,EAAAA,EAAAA,MACvDC,EAAMC,IAAWC,EAAAA,EAAAA,UAAgC,CAACR,GAAG,EAAGS,KAAM,GAAIC,KAAM,GAAIC,QAAO,EAAMC,SAAS,GAAIC,WAAY,KAClHC,EAAWC,IAAgBP,EAAAA,EAAAA,WAAS,GAErCQ,EAAgBC,IAClBV,GAAOW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIZ,GAAI,IAAE,CAACW,EAAEE,OAAOV,MAAOQ,EAAEE,OAAOC,QAAQ,EAyBzD,OANAC,EAAAA,EAAAA,YAAU,KACNlB,EAAkBH,EAAG,GACtB,KACHqB,EAAAA,EAAAA,YAAU,KACNd,EAAQ,CAACP,GAAGA,EAAIS,KAAkB,OAAZP,QAAY,IAAZA,OAAY,EAAZA,EAAcO,KAAMC,KAAkB,OAAZR,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,KAAMC,OAAmB,OAAZT,QAAY,IAAZA,OAAY,EAAZA,EAAcS,OAAQE,WAAuB,OAAZX,QAAY,IAAZA,OAAY,EAAZA,EAAcW,WAAYD,SAAqB,OAAZV,QAAY,IAAZA,OAAY,EAAZA,EAAcU,UAAU,GACxK,CAACV,KAEAoB,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,YAAU,EAACV,UAAWA,EAAWW,SAvBtBC,UACjB,MAAMC,EAAOV,EAAEW,cACfX,EAAEY,kBAE2B,IAAzBF,EAAKG,kBACLb,EAAEY,iBACFZ,EAAEc,mBAENhB,GAAa,IACgB,IAAzBY,EAAKG,wBAEH1B,EAAmBE,GACzBC,EAAQ,CAACP,GAAG,EAAGS,KAAM,GAAIC,KAAM,GAAIC,QAAQ,EAAMC,SAAS,GAAIC,WAAY,IAC1EZ,IAA0B,EAUoC+B,UAC1DC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,mBAAkBH,SAAA,EAC7BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,qBAAoBN,SAAA,EACtCV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAC,uBACZV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACT/B,KAAK,OACLgC,UAAQ,EACRC,KAAK,OACLC,YAAY,oBACZvB,MAAOd,EAAKG,KACZmC,SAAU5B,KAEdM,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAQK,SAAQ,CAAAb,SAAC,sBAG/BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,qBAAoBN,SAAA,EACtCV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAC,cACZV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACT/B,KAAK,WACLiC,KAAK,OACLC,YAAY,WACZvB,MAAOd,EAAKM,SACZgC,SAAU5B,KAEdM,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAQK,SAAQ,CAAAb,SAAC,sBAG/BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BV,EAAAA,EAAAA,KAACC,EAAAA,EAAKc,MAAK,CAAAL,UACPV,EAAAA,EAAAA,KAACC,EAAAA,EAAKuB,MAAK,CACPC,QAASzC,EAAKK,OACd+B,KAAK,SACL1C,GAAG,gBACHgD,MAAM,SACNJ,SAAW3B,GAAIV,GAAOW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGZ,GAAI,IAAEK,OAAQM,EAAEE,OAAO4B,kBAM9DzB,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,kBAAiBH,UAC5BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,+BAA8BN,SAAA,EAChDV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAE,UACbV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACTL,UAAU,OACVc,GAAG,WACHC,KAAM,EACNzC,KAAK,OACLW,MAAOd,EAAKI,KACZkC,SAAU5B,UAKtBM,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAChB,UAAW,OAASO,KAAK,SAAQV,SAAC,YAC1CV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACC,QAASnD,EAA0BkC,UAAW,OAAQkB,QAAS,SAASrB,SAAE,eAEnF,EC9Ef,EAbsBjC,IAAwF,IAAvF,GAACC,EAAE,kBAAEsD,EAAiB,yBAAErD,GAAyDF,EACpG,OACIkC,EAAAA,EAAAA,MAACsB,EAAAA,EAAS,CAACC,KAAMF,EAAmBG,OAAQxD,EAA0ByD,UAAW,MAAM1B,SAAA,EACnFV,EAAAA,EAAAA,KAACiC,EAAAA,EAAUI,OAAM,CAACC,aAAW,EAAA5B,UACzBV,EAAAA,EAAAA,KAACiC,EAAAA,EAAUM,MAAK,CAAA7B,SAAC,yBAErBV,EAAAA,EAAAA,KAACiC,EAAAA,EAAUO,KAAI,CAAA9B,UACXV,EAAAA,EAAAA,KAACyC,EAAQ,CAAC/D,GAAIA,EAAIC,yBAA0BA,QAExC,C,mECZpB,MA4BA,EA5BwBF,IAA0C,IAAzC,aAACiE,GAAkCjE,EACxD,MACMkE,GADWC,EAAAA,EAAAA,MACMC,SAASC,MAAM,KAAKC,OAAOC,SAElD,OACIrC,EAAAA,EAAAA,MAACsC,EAAAA,EAAU,CAAAvC,SAAA,EACPV,EAAAA,EAAAA,KAACiD,EAAAA,EAAWC,KAAI,CAACC,OAAQC,EAAAA,GAAMC,UAAW,CAAEC,GAAI,KAAM5C,SAAC,SAItDiC,EAAMY,KAAI,CAACC,EAASC,KACjB,MAAMC,EAAO,IAAMf,EAAMgB,MAAM,EAAGF,EAAQ,GAAGG,KAAK,KAGlD,OAFeH,IAAUd,EAAMkB,OAAS,GAGpC7D,EAAAA,EAAAA,KAACiD,EAAAA,EAAWC,KAAI,CAAC7D,QAAM,EAAAqB,SAClBgC,GADwBgB,IAI7B1D,EAAAA,EAAAA,KAACiD,EAAAA,EAAWC,KAAI,CAACC,OAAQC,EAAAA,GAAMC,UAAW,CAAEC,GAAII,GAAOhD,SAClDoD,mBAAmBN,IADqCE,EAGhE,MAEI,C,wGC/BR,MAAAK,EAAA,iGAMPC,EAAqBC,EAAAA,YAAiB,CAAAxF,EAWzCyF,KAAQ,IAXkC,SAC3CC,EAAQ,UACRtD,EAAS,QACTuD,EAAO,SACPC,EAAQ,WACRC,EAAU,MACVC,EAAK,KACLC,EAAI,QACJzC,EAAO,WACP0C,GAEDhG,EADIiG,GAAKC,EAAAA,EAAAA,GAAAlG,EAAAsF,GAER,MAAMa,GAAoBC,EAAAA,EAAAA,IAAmBV,EAAU,SACjDW,EAAUC,IAAWlE,EAAW+D,EAAmB7C,GAAW,GAAJiD,OAAOJ,EAAiB,KAAAI,OAAIjD,GAAWyC,GAAQ,GAAJQ,OAAOJ,EAAiB,KAAAI,OAAIR,GAAQJ,GAAW,GAAJY,OAAOJ,EAAiB,KAAAI,OAAuB,kBAAZZ,EAAuB,WAAHY,OAAcZ,GAAY,WAAaC,GAAY,GAAJW,OAAOJ,EAAiB,aAAaN,GAAc,GAAJU,OAAOJ,EAAiB,eAAeL,GAAS,GAAJS,OAAOJ,EAAiB,WACzWK,GAAqBjF,EAAAA,EAAAA,KAAK,SAAOJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClC8E,GAAK,IACR7D,UAAWiE,EACXZ,IAAKA,KAEP,GAAIO,EAAY,CACd,IAAIS,EAAkB,GAAHF,OAAMJ,EAAiB,eAI1C,MAH0B,kBAAfH,IACTS,EAAkB,GAAHF,OAAME,EAAe,KAAAF,OAAIP,KAEtBzE,EAAAA,EAAAA,KAAK,MAAO,CAC9Ba,UAAWqE,EACXxE,SAAUuE,GAEd,CACA,OAAOA,CAAK,IAEdjB,EAAMmB,YAAc,QACpB,S,gKC3BA,MAyBA,EAzBoB1G,IAA6F,IAA5F,GAACC,EAAE,WAAEa,EAAU,gBAAE6F,EAAe,uBAAEC,GAAoD5G,EACvG,MAAM,mBAAE6G,IAAwBvG,EAAAA,EAAAA,KAMhC,OACI4B,EAAAA,EAAAA,MAAC4E,EAAAA,EAAK,CAACrD,KAAMkD,EAAiBjD,OAAQkD,EAAwBG,UAAQ,EAAA9E,SAAA,EAClEV,EAAAA,EAAAA,KAACuF,EAAAA,EAAMlD,OAAM,CAACC,aAAW,EAAA5B,UACrBV,EAAAA,EAAAA,KAACuF,EAAAA,EAAMhD,MAAK,CAAA7B,SAAC,eAEjBV,EAAAA,EAAAA,KAACuF,EAAAA,EAAM/C,KAAI,CAAA9B,SAAC,uDACZC,EAAAA,EAAAA,MAAC4E,EAAAA,EAAME,OAAM,CAAA/E,SAAA,EACTV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACE,QAAQ,YAAYD,QAASuD,EAAuB3E,SAAC,YAG7DV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACE,QAAQ,SAASD,QAfjB4D,KAChBL,IACAC,EAAmB5G,EAAIa,EAAW,EAaqBmB,SAAC,gBAIhD,E,cCrBhB,MAyFA,EAzFajC,IAA0C,IAAzC,WAACc,GAAkCd,EAC7C,MAAM,cAAEkH,EAAa,4BAAEC,IAAiC7G,EAAAA,EAAAA,MACjDL,EAAImH,IAAS3G,EAAAA,EAAAA,UAAS,IAEtBkG,EAAiBU,IAAsB5G,EAAAA,EAAAA,WAAS,IAWhD8C,EAAmB+D,IAAwB7G,EAAAA,EAAAA,WAAS,GAgB3D,OAJAa,EAAAA,EAAAA,YAAU,KACN6F,EAA4BrG,EAAW,GACxC,KAGCoB,EAAAA,EAAAA,MAAAqF,EAAAA,SAAA,CAAAtF,SAAA,EAEIC,EAAAA,EAAAA,MAACqD,EAAAA,EAAK,CAACI,SAAO,EAACC,UAAQ,EAACE,OAAK,EAAA7D,SAAA,EACzBV,EAAAA,EAAAA,KAAA,SAAAU,UACAC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIV,EAAAA,EAAAA,KAAA,MAAAU,SAAI,OACJV,EAAAA,EAAAA,KAAA,MAAIa,UAAU,aAAYH,SAAE,UAC5BV,EAAAA,EAAAA,KAAA,MAAAU,SAAI,gBACJV,EAAAA,EAAAA,KAAA,MAAAU,SAAI,iBAGRV,EAAAA,EAAAA,KAAA,SAAAU,SACCiF,EAAcpC,KAAK3E,IAChB+B,EAAAA,EAAAA,MAAA,MAAIE,UAAYjC,EAAaS,OAAwC,GAA/B,6BAAkCqB,SAAA,EACpEV,EAAAA,EAAAA,KAAA,MAAAU,SAAK9B,EAAaF,MAClBsB,EAAAA,EAAAA,KAAA,MAAIa,UAAU,aAAYH,UACtBV,EAAAA,EAAAA,KAACoD,EAAAA,GAAI,CAACE,GAAE,cAAA0B,OAAgBpG,EAAaW,WAAU,KAAAyF,OAAIpG,EAAaF,IAAKgC,SAChE9B,EAAaO,UAItBa,EAAAA,EAAAA,KAAA,MAAIa,UAAU,OAAMH,SAAE,IAAIuF,KAAKrH,EAAasH,YAAYC,oBACxDxF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EAEIV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACE,QAAQ,YAAYlB,UAAU,MAAMiB,QAASA,IApC5CpD,KAC7BmH,EAAMnH,GACNqH,GAAqB,EAAK,EAkCqDK,CAAwBxH,EAAaF,IAAIgC,UAChGV,EAAAA,EAAAA,KAAA,KAAGa,UAAU,mBAEhBjC,EAAaU,UAAWU,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAChB,UAAW,MAAOkB,QAAQ,YAAYsE,KAAMzH,EAAaU,SAAUO,OAAO,SAAQa,UAC/GV,EAAAA,EAAAA,KAAA,KAAGa,UAAU,yBACL,IAEZb,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAChB,UAAW,MAAOkB,QAAQ,SAASD,QAASA,IAtD7CpD,KAC3BmH,EAAMnH,GACNoH,GAAmB,EAAK,EAoDsDQ,CAAsB1H,EAAaF,IAAIgC,UAC7FV,EAAAA,EAAAA,KAAA,KAAGa,UAAU,uBAnBqDjC,EAAaF,YA4BnGsB,EAAAA,EAAAA,KAACuG,EAAW,CACR7H,GAAIA,EACJa,WAAYA,EACZ6F,gBAAiBA,EACjBC,uBAxEmBA,KAC3BS,GAAmB,GACnBD,EAAM,EAAE,KAwEJ7F,EAAAA,EAAAA,KAACwG,EAAAA,EAAa,CACV9H,GAAIA,EACJsD,kBAAmBA,EACnBrD,yBAlEqBA,KAC7BoH,GAAqB,GACrBF,EAAM,EAAE,MAmEL,E,gECtFX,MA6EA,EA7EgBpH,IAAyD,IAAxD,YAACgI,EAAW,WAAElH,GAAoCd,EAC/D,MAAOO,EAAMC,IAAWC,EAAAA,EAAAA,UAA+B,CAAEC,KAAM,GAAIC,KAAM,GAAIG,aAAYD,SAAS,MAC3FE,EAAWC,IAAgBP,EAAAA,EAAAA,WAAS,GACrCwH,GAAkB3H,EAAAA,EAAAA,IAAqB4H,GAAQA,EAAMD,kBAErDhH,EAAgBC,IAClBV,GAAOW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIZ,GAAI,IAAE,CAACW,EAAEE,OAAOV,MAAOQ,EAAEE,OAAOC,QAAQ,EAmBzD,OACIE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,YAAU,EAACV,UAAWA,EAAWW,SAhBtBC,UACjB,MAAMC,EAAOV,EAAEW,cACfX,EAAEY,kBAE2B,IAAzBF,EAAKG,kBACLb,EAAEY,iBACFZ,EAAEc,mBAENhB,GAAa,IACgB,IAAzBY,EAAKG,wBAEHkG,EAAgB1H,GACtBC,EAAQ,CAAEE,KAAM,GAAIC,KAAM,GAAIG,aAAYD,SAAS,KACnDmH,IAAa,EAGiD/F,UAC1DC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,mBAAkBH,SAAA,EAC7BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,qBAAoBN,SAAA,EACtCV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAC,wBACZV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACT/B,KAAK,OACLgC,UAAQ,EACRC,KAAK,OACLC,YAAY,oBACZvB,MAAOd,EAAKG,KACZmC,SAAU5B,KAEdM,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAQK,SAAQ,CAAAb,SAAC,sBAI/BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,qBAAoBN,SAAA,EACtCV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAC,cACZV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACT/B,KAAK,WACLiC,KAAK,OACLC,YAAY,WACZvB,MAAOd,EAAKM,SACZgC,SAAU5B,KAEdM,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAQK,SAAQ,CAAAb,SAAC,sBAG/BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,kBAAiBH,UAC5BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,+BAA8BN,SAAA,EAChDV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAE,UACbV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACTL,UAAU,OACVc,GAAG,WACHC,KAAM,EACNzC,KAAK,OACLW,MAAOd,EAAKI,KACZkC,SAAU5B,UAKtBM,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAChB,UAAW,OAASO,KAAK,SAAQV,SAAC,YAC1CV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACC,QAAS2E,EAAa5F,UAAW,OAAQkB,QAAS,SAASrB,SAAE,eAEtE,EC5Df,EAbqBjC,IAAwD,IAAvD,KAACyD,EAAI,YAAEuE,EAAW,WAAElH,GAA6Bd,EACnE,OACIkC,EAAAA,EAAAA,MAACsB,EAAAA,EAAS,CAACC,KAAMA,EAAME,UAAW,MAAOD,OAAQsE,EAAaG,QAAQ,EAAKlG,SAAA,EACvEV,EAAAA,EAAAA,KAACiC,EAAAA,EAAUI,OAAM,CAACC,aAAW,EAAA5B,UACzBV,EAAAA,EAAAA,KAACiC,EAAAA,EAAUM,MAAK,CAAA7B,SAAC,sBAErBV,EAAAA,EAAAA,KAACiC,EAAAA,EAAUO,KAAI,CAAA9B,UACXV,EAAAA,EAAAA,KAAC6G,EAAO,CAACJ,YAAaA,EAAalH,WAAYA,QAE3C,ECiDpB,EA1DsBuH,KAClB,MAAM,GAAEpI,IAAOqI,EAAAA,EAAAA,KACTC,EAAWC,OAAOvI,IAClB,QAAEwI,EAAO,aAAEC,IAAkBC,EAAAA,EAAAA,KAC7BC,GAAWC,EAAAA,EAAAA,OAEVtF,EAAmB+D,IAAwB7G,EAAAA,EAAAA,WAAS,IAQpDgD,EAAMqF,IAAWrI,EAAAA,EAAAA,WAAS,GAOjC,OAHAa,EAAAA,EAAAA,YAAU,KACNoH,EAAaH,EAAS,GACvB,CAAChF,KAEArB,EAAAA,EAAAA,MAAAqF,EAAAA,SAAA,CAAAtF,SAAA,EACIC,EAAAA,EAAAA,MAAC6G,EAAAA,EAAS,CAAA9G,SAAA,EACNV,EAAAA,EAAAA,KAAA,MAAAU,SAAKwG,EAAQ/H,QACba,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAChB,UAAW,OAAQkB,QAAQ,oBAAoBD,QAASA,IAAMuF,EAAS,eAAe3G,UAC1FV,EAAAA,EAAAA,KAAA,KAAGa,UAAU,+BAEjBF,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAAChB,UAAW,OAAQkB,QAAS,oBAC5BD,QAASA,KAA8BoF,EAAQxI,QAnB/DqH,GAAqB,IAmB8CrF,SAAA,EACvDV,EAAAA,EAAAA,KAAA,KAAGa,UAAU,sBAAwB,WAGzCb,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACyH,EAAAA,EAAe,CAAC/E,aAAewE,EAAQ/H,QACtC+H,EAAQ7H,SACNW,EAAAA,EAAAA,KAAC0H,EAAAA,EAAK,CAAgB3F,QAAS,SAASrB,SAAC,eAA7B,UAGfwG,EAAQ9H,MAAOY,EAAAA,EAAAA,KAAA,KAAAU,SAAIwG,EAAQ9H,OAAY,MAExCY,EAAAA,EAAAA,KAAA,UACAW,EAAAA,EAAAA,MAAA,OAAKE,UAAU,yDAAwDH,SAAA,EACnEV,EAAAA,EAAAA,KAAA,MAAAU,SAAI,mBACJC,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAACE,QAAQ,UAAUD,QA7BvB6F,IAAMJ,GAAQ,GA6B6B7G,SAAA,EAC1CV,EAAAA,EAAAA,KAAA,KAAGa,UAAU,2BAA6B,0BAIlDb,EAAAA,EAAAA,KAAC4H,EAAI,CAACrI,WAAYyH,QAEtBhH,EAAAA,EAAAA,KAAC6H,EAAY,CAAC3F,KAAMA,EAAMuE,YArCdA,IAAMc,GAAQ,GAqC0BhI,WAAYyH,KAChEhH,EAAAA,EAAAA,KAACwG,EAAAA,EAAa,CAAC9H,GAAIsI,EAAUhF,kBAAmBA,EAAmBrD,yBA9C1CA,KAC7BoH,GAAqB,EAAM,MA8CxB,C,+HCtDX,MAkFA,EAlFiBtH,IAA0D,IAAzD,GAACC,EAAE,yBAAEC,GAA8CF,EACjE,MAAM,QAAEyI,EAAO,aAAEC,EAAY,cAAEW,IAAmBV,EAAAA,EAAAA,MAC3CpI,EAAMC,IAAWC,EAAAA,EAAAA,UAA2B,CAACR,GAAG,EAAGS,KAAM,GAAIC,KAAM,GAAIC,QAAO,KAC9EG,EAAWC,IAAgBP,EAAAA,EAAAA,WAAS,GAErCQ,EAAgBC,IAClBV,GAAOW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIZ,GAAI,IAAE,CAACW,EAAEE,OAAOV,MAAOQ,EAAEE,OAAOC,QAAQ,EAyBzD,OANAC,EAAAA,EAAAA,YAAU,KACNoH,EAAazI,EAAG,GACjB,KACHqB,EAAAA,EAAAA,YAAU,KACNd,EAAQ,CAACP,GAAGA,EAAIS,KAAa,OAAP+H,QAAO,IAAPA,OAAO,EAAPA,EAAS/H,KAAMC,KAAa,OAAP8H,QAAO,IAAPA,OAAO,EAAPA,EAAS9H,KAAMC,OAAc,OAAP6H,QAAO,IAAPA,OAAO,EAAPA,EAAS7H,QAAQ,GACnF,CAAC6H,KAEAlH,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,YAAU,EAACV,UAAWA,EAAWW,SAvBtBC,UACjB,MAAMC,EAAOV,EAAEW,cACfX,EAAEY,kBAE2B,IAAzBF,EAAKG,kBACLb,EAAEY,iBACFZ,EAAEc,mBAENhB,GAAa,IACgB,IAAzBY,EAAKG,wBAEHsH,EAAc9I,GACpBC,EAAQ,CAACP,GAAG,EAAGS,KAAM,GAAIC,KAAM,GAAIC,QAAQ,IAC3CV,IAA0B,EAUoC+B,UAC1DC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,mBAAkBH,SAAA,EAC7BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,qBAAoBN,SAAA,EACtCV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAC,kBACZV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACT/B,KAAK,OACLgC,UAAQ,EACRC,KAAK,OACLC,YAAY,eACZvB,MAAOd,EAAKG,KACZmC,SAAU5B,KAEdM,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAQK,SAAQ,CAAAb,SAAC,sBAG/BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BV,EAAAA,EAAAA,KAACC,EAAAA,EAAKc,MAAK,CAAAL,UACPV,EAAAA,EAAAA,KAACC,EAAAA,EAAKuB,MAAK,CACPC,QAASzC,EAAKK,OACd+B,KAAK,SACL1C,GAAG,gBACHgD,MAAM,SACNJ,SAAW3B,GAAIV,GAAOW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGZ,GAAI,IAAEK,OAAQM,EAAEE,OAAO4B,kBAM9DzB,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,kBAAiBH,UAC5BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,+BAA8BN,SAAA,EAChDV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAE,UACbV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACTL,UAAU,OACVc,GAAG,WACHC,KAAM,EACNzC,KAAK,OACLW,MAAOd,EAAKI,KACZkC,SAAU5B,UAKtBM,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAChB,UAAW,OAASO,KAAK,SAAQV,SAAC,YAC1CV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACC,QAASnD,EAA0BkC,UAAW,OAAQkB,QAAS,SAASrB,SAAE,eAEnF,EChEf,EAbsBjC,IAA4E,IAA3E,GAACC,EAAE,kBAAEsD,EAAiB,yBAAErD,GAA6CF,EACxF,OACIkC,EAAAA,EAAAA,MAACsB,EAAAA,EAAS,CAACC,KAAMF,EAAmBG,OAAQxD,EAA0ByD,UAAW,MAAM1B,SAAA,EACnFV,EAAAA,EAAAA,KAACiC,EAAAA,EAAUI,OAAM,CAACC,aAAW,EAAA5B,UACzBV,EAAAA,EAAAA,KAACiC,EAAAA,EAAUM,MAAK,CAAA7B,SAAC,oBAErBV,EAAAA,EAAAA,KAACiC,EAAAA,EAAUO,KAAI,CAAA9B,UACXV,EAAAA,EAAAA,KAACyC,EAAQ,CAAC/D,GAAIA,EAAIC,yBAA0BA,QAExC,C","sources":["components/construction/EditForm.tsx","components/construction/EditSidePanel.tsx","components/BreadcrumbsComp.tsx","../node_modules/react-bootstrap/esm/Table.js","components/construction/DeleteModal.tsx","components/construction/List.tsx","components/construction/AddForm.tsx","components/construction/AddSidePanel.tsx","pages/company/DetailCompany.tsx","components/company/EditForm.tsx","components/company/EditSidePanel.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useConstructionStore} from \"../../store/useConstructionStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {ConstructionInputEdit} from \"../../types/Construction\";\n\ntype ConstructionEditFormProps = {\n    id:number,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditForm = ({id, handleCloseEditSidePanel}:ConstructionEditFormProps) => {\n    const {construction, fetchConstruction, updateConstruction} = useConstructionStore();\n    const [form, setForm] = useState<ConstructionInputEdit>({id:0, name: '', text: '', active:true, location:'', company_id: 0});\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await updateConstruction(form);\n        setForm({id:0, name: '', text: '', active: true, location:'', company_id: 0 });\n        handleCloseEditSidePanel()\n    };\n\n    useEffect(() => {\n        fetchConstruction(id);\n    }, []);\n    useEffect(() => {\n        setForm({id:id, name: construction?.name, text: construction?.text, active:construction?.active, company_id:construction?.company_id, location:construction?.location});\n    }, [construction]);\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Construction Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Construction Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Location</Form.Label>\n                        <Form.Control\n                            name=\"location\"\n                            type=\"text\"\n                            placeholder=\"Location\"\n                            value={form.location}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Check\n                            checked={form.active}\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"Active\"\n                            onChange={(e)=>setForm({...form, active: e.target.checked\n                            })}\n                        />\n                    </Form.Group>\n\n                </Row>\n                <Row className=\"mb-3 text-start\">\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label >Text</Form.Label>\n                        <Form.Control\n                            className=\"mb-3\"\n                            as=\"textarea\"\n                            rows={3}\n                            name=\"text\"\n                            value={form.text}\n                            onChange={handleChange}\n                        />\n                    </Form.Group>\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Update</Button>\n                <Button onClick={handleCloseEditSidePanel} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default EditForm;","import React from 'react';\r\nimport {Offcanvas} from \"react-bootstrap\";\r\nimport EditForm from \"./EditForm\";\r\n\r\ntype ConstructionEditSidePanelProps = {\r\n    id:number,\r\n    showEditSidePanel: boolean,\r\n    handleCloseEditSidePanel:()=>void\r\n}\r\n\r\nconst EditSidePanel = ({id, showEditSidePanel, handleCloseEditSidePanel }:ConstructionEditSidePanelProps) => {\r\n    return (\r\n        <Offcanvas show={showEditSidePanel} onHide={handleCloseEditSidePanel} placement={\"end\"} >\r\n            <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Edit Construction</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <EditForm id={id} handleCloseEditSidePanel={handleCloseEditSidePanel} />\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    );\r\n};\r\n\r\nexport default EditSidePanel;","import { Breadcrumb } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\n\ntype BreadcrumbsCompProps ={\n    openPageName : string\n}\n\nconst BreadcrumbsComp = ({openPageName}:BreadcrumbsCompProps) => {\n    const location = useLocation();\n    const paths = location.pathname.split('/').filter(Boolean);\n\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item linkAs={Link} linkProps={{ to: '/' }}>\n                Home\n            </Breadcrumb.Item>\n\n            {paths.map((segment, index) => {\n                const path = '/' + paths.slice(0, index + 1).join('/');\n                const isLast = index === paths.length - 1;\n\n                return isLast ? (\n                    <Breadcrumb.Item active key={path}>\n                        {openPageName}\n                    </Breadcrumb.Item>\n                ) : (\n                    <Breadcrumb.Item linkAs={Link} linkProps={{ to: path }} key={path}>\n                        {decodeURIComponent(segment)}\n                    </Breadcrumb.Item>\n                );\n            })}\n        </Breadcrumb>\n    );\n};\n\nexport default BreadcrumbsComp;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nTable.displayName = 'Table';\nexport default Table;","import React from 'react';\r\nimport {useConstructionStore} from \"../../store/useConstructionStore\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\ntype ConstructionDeleteModalProps = {\r\n    id:number,\r\n    company_id: number,\r\n    showDeleteModal: boolean,\r\n    handleCloseDeleteModal:()=>void\r\n}\r\n\r\nconst DeleteModal = ({id, company_id, showDeleteModal, handleCloseDeleteModal}:ConstructionDeleteModalProps) => {\r\n    const { deleteConstruction  } = useConstructionStore();\r\n    const handleDelete =() =>{\r\n        handleCloseDeleteModal();\r\n        deleteConstruction(id, company_id);\r\n    }\r\n\r\n    return (\r\n        <Modal show={showDeleteModal} onHide={handleCloseDeleteModal} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Warning</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Are you sure you want to delete the construction?</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Delete\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DeleteModal;","import React, {useEffect, useState} from 'react';\r\nimport {useConstructionStore} from \"../../store/useConstructionStore\";\r\nimport {Button, Table} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport DeleteModal from \"./DeleteModal\";\r\nimport EditSidePanel from \"./EditSidePanel\";\r\n\r\ntype ConstructionTableProps = {\r\n    company_id: number;\r\n}\r\n\r\nconst List = ({company_id}:ConstructionTableProps) => {\r\n    const { constructions, fetchConstructionsInCompany  } = useConstructionStore();\r\n    const [id, setId] = useState(0);\r\n\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const handleCloseDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n        setId(0);\r\n    }\r\n    const handleShowDeleteModal = (id:number) => {\r\n        setId(id);\r\n        setShowDeleteModal(true);\r\n    }\r\n\r\n    // Edit side panel state and handlers\r\n    const [showEditSidePanel, setShowEditSidePanel] = useState(false);\r\n    const handleCloseEditSidePanel = () => {\r\n        setShowEditSidePanel(false);\r\n        setId(0);\r\n    }\r\n    const handleShowEditSidePanel = (id: number) => {\r\n        setId(id);\r\n        setShowEditSidePanel(true);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchConstructionsInCompany(company_id);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th className=\"text-start\" >Name</th>\r\n                    <th>Created at</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {constructions.map((construction) => (\r\n                    <tr className={!construction.active ? 'table-secondary text-muted' : ''} key={construction.id}>\r\n                        <td>{construction.id}</td>\r\n                        <td className=\"text-start\">\r\n                            <Link to={`/companies/${construction.company_id}/${construction.id}`}>\r\n                                {construction.name}\r\n                            </Link>\r\n                        </td>\r\n\r\n                        <td className=\"w-25\">{new Date(construction.created_at).toLocaleString()}</td>\r\n                        <td>\r\n                            {/* Edit button opens side panel */}\r\n                            <Button variant=\"secondary\" className=\"m-1\" onClick={() => handleShowEditSidePanel(construction.id)}>\r\n                                <i className=\"bi bi-pencil\"></i>\r\n                            </Button>\r\n                            {construction.location ? <Button className={\"m-1\"} variant=\"secondary\" href={construction.location} target=\"_blank\">\r\n                                <i className=\"bi bi-geo-alt-fill\"></i>\r\n                            </Button> : \"\"}\r\n\r\n                            <Button className={\"m-1\"} variant=\"danger\" onClick={() => handleShowDeleteModal(construction.id)}>\r\n                                <i className=\"bi bi-trash\"></i>\r\n                            </Button>\r\n\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n\r\n                </tbody>\r\n            </Table>\r\n            <DeleteModal\r\n                id={id}\r\n                company_id={company_id}\r\n                showDeleteModal={showDeleteModal}\r\n                handleCloseDeleteModal={handleCloseDeleteModal}\r\n            />\r\n            <EditSidePanel\r\n                id={id}\r\n                showEditSidePanel={showEditSidePanel}\r\n                handleCloseEditSidePanel={handleCloseEditSidePanel}\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default List;","import React, {useState} from 'react';\r\nimport {useConstructionStore} from \"../../store/useConstructionStore\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport {ConstructionInputAdd} from \"../../types/Construction\";\r\n\r\ntype ConstructionAddFormProps = {\r\n    handleClose:()=>void,\r\n    company_id: number\r\n}\r\n\r\nconst AddForm = ({handleClose, company_id}:ConstructionAddFormProps) => {\r\n    const [form, setForm] = useState<ConstructionInputAdd>({ name: '', text: '', company_id, location:''});\r\n    const [validated, setValidated] = useState(false);\r\n    const addConstruction = useConstructionStore(state=> state.addConstruction)\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        const data = e.currentTarget as HTMLFormElement;\r\n        e.preventDefault();\r\n\r\n        if (data.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n        setValidated(true);\r\n        if (data.checkValidity() === false) return;\r\n\r\n        await addConstruction(form);\r\n        setForm({ name: '', text: '', company_id, location:'' });\r\n        handleClose()\r\n    };\r\n    return (\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Col className=\"mb-3 text-start \">\r\n                <Row className=\"mb-3 text-start \">\r\n                    <Form.Group controlId=\"validationCustom01\">\r\n                        <Form.Label>Construction name*</Form.Label>\r\n                        <Form.Control\r\n                            name=\"name\"\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Construction Name\"\r\n                            value={form.name}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Row>\r\n\r\n                <Row className=\"mb-3 text-start \">\r\n                    <Form.Group controlId=\"validationCustom03\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control\r\n                            name=\"location\"\r\n                            type=\"text\"\r\n                            placeholder=\"Location\"\r\n                            value={form.location}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className=\"mb-3 text-start\">\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label >Text</Form.Label>\r\n                        <Form.Control\r\n                            className=\"mb-3\"\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            name=\"text\"\r\n                            value={form.text}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                </Row>\r\n\r\n                <Button className={\"mx-1\"}  type=\"submit\">Create</Button>\r\n                <Button onClick={handleClose} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\r\n            </Col>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default AddForm;","import React from 'react';\r\nimport {Offcanvas} from \"react-bootstrap\";\r\nimport AddForm from \"../construction/AddForm\";\r\n\r\ntype AddSidePanelProps ={\r\n    show:boolean,\r\n    handleClose: ()=>void,\r\n    company_id:number\r\n}\r\n\r\nconst AddSidePanel = ({show, handleClose, company_id}:AddSidePanelProps) => {\r\n    return (\r\n        <Offcanvas show={show} placement={\"end\"} onHide={handleClose} scroll={true} >\r\n            <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Create Company</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <AddForm handleClose={handleClose} company_id={company_id} />\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    );\r\n};\r\n\r\nexport default AddSidePanel;","import React, {useEffect, useState} from 'react';\nimport {useCompanyStore} from \"../../store/useCompanyStore\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {Alert, Button, Container} from \"react-bootstrap\";\nimport BreadcrumbsComp from \"../../components/BreadcrumbsComp\";\nimport List from \"../../components/construction/List\";\nimport EditSidePanel from \"../../components/company/EditSidePanel\";\nimport AddSidePanel from \"../../components/construction/AddSidePanel\";\n\n\nconst DetailCompany = () => {\n    const { id } = useParams<{ id: string }>();\n    const numberId = Number(id);\n    const { company, fetchCompany  } = useCompanyStore();\n    const navigate = useNavigate();\n\n    const [showEditSidePanel, setShowEditSidePanel] = useState(false);\n    const handleCloseEditSidePanel = () => {\n        setShowEditSidePanel(false);\n    }\n    const handleShowEditSidePanel = (numberId:number) => {\n        setShowEditSidePanel(true);\n    }\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        fetchCompany(numberId);\n    }, [showEditSidePanel]);\n    return (\n        <>\n            <Container>\n                <h1>{company.name}</h1>\n                <hr></hr>\n                <Button className={\"me-2\"} variant=\"outline-secondary\" onClick={() => navigate('/companies/')}>\n                    <i className=\"bi bi-arrow-left-circle\"></i>\n                </Button>\n                <Button className={\"ms-3\"} variant={\"outline-secondary\"}\n                        onClick={() => handleShowEditSidePanel(company.id)}>\n                    <i className=\"bi bi-pencil me-2\"></i>\n                    Edit\n                </Button>\n                <hr></hr>\n                <BreadcrumbsComp openPageName ={company.name}/>\n                {!company.active &&\n                    <Alert key={'danger'} variant={'danger'}>\n                        Not active!\n                    </Alert>}\n                {company.text ? <p>{company.text}</p> : null}\n\n                <hr></hr>\n                <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                    <h4>Constructions</h4>\n                    <Button variant=\"primary\" onClick={handleShow}>\n                        <i className=\"me-2 bi bi-plus-circle\"></i>\n                        Add Construction\n                    </Button>\n                </div>\n                <List company_id={numberId}/>\n            </Container>\n            <AddSidePanel show={show} handleClose={handleClose} company_id={numberId}/>\n            <EditSidePanel id={numberId} showEditSidePanel={showEditSidePanel} handleCloseEditSidePanel={handleCloseEditSidePanel} />\n        </>\n    );\n};\n\nexport default DetailCompany;","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport { CompanyInputEdit} from \"../../types/Company\";\nimport {useCompanyStore} from \"../../store/useCompanyStore\";\n\ntype CompanyEditFormProps = {\n    id:number,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditForm = ({id, handleCloseEditSidePanel}:CompanyEditFormProps) => {\n    const { company, fetchCompany, updateCompany  } = useCompanyStore();\n    const [form, setForm] = useState<CompanyInputEdit>({id:0, name: '', text: '', active:true});\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await updateCompany(form);\n        setForm({id:0, name: '', text: '', active: true });\n        handleCloseEditSidePanel()\n    };\n\n    useEffect(() => {\n        fetchCompany(id);\n    }, []);\n    useEffect(() => {\n        setForm({id:id, name: company?.name, text: company?.text, active:company?.active});\n    }, [company]);\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Company Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Company Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Check\n                            checked={form.active}\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"Active\"\n                            onChange={(e)=>setForm({...form, active: e.target.checked\n                            })}\n                        />\n                    </Form.Group>\n\n                </Row>\n                <Row className=\"mb-3 text-start\">\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label >Text</Form.Label>\n                        <Form.Control\n                            className=\"mb-3\"\n                            as=\"textarea\"\n                            rows={3}\n                            name=\"text\"\n                            value={form.text}\n                            onChange={handleChange}\n                        />\n                    </Form.Group>\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Update</Button>\n                <Button onClick={handleCloseEditSidePanel} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default EditForm;","import React from 'react';\r\nimport {Offcanvas} from \"react-bootstrap\";\r\nimport EditForm from \"./EditForm\";\r\n\r\ntype EditSidePanelProps = {\r\n    id:number,\r\n    showEditSidePanel: boolean,\r\n    handleCloseEditSidePanel:()=>void\r\n}\r\n\r\n\r\nconst EditSidePanel = ({id, showEditSidePanel, handleCloseEditSidePanel }:EditSidePanelProps) => {\r\n    return (\r\n        <Offcanvas show={showEditSidePanel} onHide={handleCloseEditSidePanel} placement={\"end\"} >\r\n            <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Edit Company</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <EditForm id={id} handleCloseEditSidePanel={handleCloseEditSidePanel} />\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    );\r\n};\r\n\r\nexport default EditSidePanel;"],"names":["_ref","id","handleCloseEditSidePanel","construction","fetchConstruction","updateConstruction","useConstructionStore","form","setForm","useState","name","text","active","location","company_id","validated","setValidated","handleChange","e","_objectSpread","target","value","useEffect","_jsx","Form","noValidate","onSubmit","async","data","currentTarget","preventDefault","checkValidity","stopPropagation","children","_jsxs","Col","className","Row","Group","controlId","Label","Control","required","type","placeholder","onChange","Feedback","Check","checked","label","as","rows","Button","onClick","variant","showEditSidePanel","Offcanvas","show","onHide","placement","Header","closeButton","Title","Body","EditForm","openPageName","paths","useLocation","pathname","split","filter","Boolean","Breadcrumb","Item","linkAs","Link","linkProps","to","map","segment","index","path","slice","join","length","decodeURIComponent","_excluded","Table","React","ref","bsPrefix","striped","bordered","borderless","hover","size","responsive","props","_objectWithoutProperties","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","responsiveClass","displayName","showDeleteModal","handleCloseDeleteModal","deleteConstruction","Modal","centered","Footer","handleDelete","constructions","fetchConstructionsInCompany","setId","setShowDeleteModal","setShowEditSidePanel","_Fragment","Date","created_at","toLocaleString","handleShowEditSidePanel","href","handleShowDeleteModal","DeleteModal","EditSidePanel","handleClose","addConstruction","state","scroll","AddForm","DetailCompany","useParams","numberId","Number","company","fetchCompany","useCompanyStore","navigate","useNavigate","setShow","Container","BreadcrumbsComp","Alert","handleShow","List","AddSidePanel","updateCompany"],"sourceRoot":""}