{"version":3,"file":"static/js/775.9103478c.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","components/BreadcrumbsComp.tsx","components/plan/EditPlanForm.tsx","components/plan/EditSidePanel.tsx","components/plan/AddInformationForm.tsx","components/plan/AddInformationSidePanel.tsx","components/SafePdfViewer.tsx","components/plan/DeleteModalInformation.tsx","components/plan/TypeOfWorkTabsContent.tsx","components/plan/TypesOfWorkTabs.tsx","pages/company/DetailPlan.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null || onSelect(eventKeyPassed, e);\n    onClick == null || onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  'aria-controls': ariaControls,\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      \"aria-controls\": ariaControls,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import { Breadcrumb } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\n\ntype BreadcrumbsCompProps ={\n    openPageName : string\n}\n\nconst BreadcrumbsComp = ({openPageName}:BreadcrumbsCompProps) => {\n    const location = useLocation();\n    const paths = location.pathname.split('/').filter(Boolean);\n\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item linkAs={Link} linkProps={{ to: '/' }}>\n                Home\n            </Breadcrumb.Item>\n\n            {paths.map((segment, index) => {\n                const path = '/' + paths.slice(0, index + 1).join('/');\n                const isLast = index === paths.length - 1;\n\n                return isLast ? (\n                    <Breadcrumb.Item active key={path}>\n                        {openPageName}\n                    </Breadcrumb.Item>\n                ) : (\n                    <Breadcrumb.Item linkAs={Link} linkProps={{ to: path }} key={path}>\n                        {decodeURIComponent(segment)}\n                    </Breadcrumb.Item>\n                );\n            })}\n        </Breadcrumb>\n    );\n};\n\nexport default BreadcrumbsComp;\n","import React, {useEffect, useState} from 'react';\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {PlanInputEdit} from \"../../types/Plan\";\n\ntype PlanEditFormProps = {\n    id:number,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditPlanForm = ({id, handleCloseEditSidePanel}:PlanEditFormProps) => {\n    const {plan, fetchPlan, updatePlan} = usePlanStore();\n    const [form, setForm] = useState<PlanInputEdit>({id:0, name: '', active:true, construction_id: 0});\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await updatePlan(form);\n        setForm({id:0, name: '', active: true,  construction_id: 0 });\n        handleCloseEditSidePanel()\n    };\n\n    useEffect(() => {\n        fetchPlan(id);\n    }, []);\n    useEffect(() => {\n        setForm({id:id, name: plan?.name, active:plan?.active, construction_id:plan?.construction_id});\n    }, [plan]);\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Plan Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Plan Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Check\n                            checked={form.active}\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"Active\"\n                            onChange={(e)=>setForm({...form, active: e.target.checked\n                            })}\n                        />\n                    </Form.Group>\n\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Update</Button>\n                <Button onClick={handleCloseEditSidePanel} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default EditPlanForm;","import React from 'react';\nimport {Offcanvas} from \"react-bootstrap\";\nimport EditPlanForm from \"./EditPlanForm\";\n\ntype PlanEditSidePanelProps = {\n    id:number,\n    showEditSidePanel: boolean,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditSidePanel = ({id, showEditSidePanel, handleCloseEditSidePanel }:PlanEditSidePanelProps) => {\n    return (\n        <Offcanvas show={showEditSidePanel} onHide={handleCloseEditSidePanel} placement={\"end\"} >\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>Edit Plan</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                <EditPlanForm id={id} handleCloseEditSidePanel={handleCloseEditSidePanel} />\n            </Offcanvas.Body>\n        </Offcanvas>\n    );\n};\n\nexport default EditSidePanel;","import React, {useState} from 'react';\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {usePlanInformationStore} from \"../../store/usePlanInformationStore\";\nimport {PlanInformationInputAdd} from \"../../types/PlanInformation\";\n\ntype Props = {\n    handleClose:()=>void,\n    typeOfWorkId:number\n}\n\nconst AddInformationForm = ({handleClose, typeOfWorkId}:Props) => {\n    const plan = usePlanStore(state=> state.plan)\n    const addPlanInformation = usePlanInformationStore(state=> state.addPlanInformation)\n    const [form, setForm] = useState<PlanInformationInputAdd>({ name: '',type_of_work_id:typeOfWorkId, plan_id:plan.id, text:'', file: null, type_of_file:''});\n    const [validated, setValidated] = useState(false);\n\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n        await addPlanInformation(form);\n        setForm({ name: '', text:'', type_of_work_id:0, plan_id:plan.id, file: null, type_of_file:'' });\n        handleClose()\n    };\n\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            setForm({ ...form, file: e.target.files[0] });\n        }\n    };\n\n\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Name*</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                        <Form.Label>Default file input example</Form.Label>\n                        <Form.Control\n                            name={\"file\"}\n                            onChange={handleFileChange}\n                            type=\"file\"\n                        />\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start\">\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label >Text</Form.Label>\n                        <Form.Control\n                            className=\"mb-3\"\n                            as=\"textarea\"\n                            rows={3}\n                            name=\"text\"\n                            onChange={handleChange}\n                        />\n                    </Form.Group>\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Create</Button>\n                <Button onClick={handleClose} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default AddInformationForm;","import React from 'react';\nimport {Offcanvas} from \"react-bootstrap\";\nimport AddInformationForm from \"./AddInformationForm\";\n\ntype AddInformationSidePanelProps ={\n    show:boolean,\n    handleClose: ()=>void,\n    typeOfWorkId: number\n}\n\nconst AddInformationSidePanel = ({show, handleClose, typeOfWorkId}:AddInformationSidePanelProps) => {\n    return (\n        <Offcanvas show={show} placement={\"end\"} onHide={handleClose} scroll={true} >\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>Add Information</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                <AddInformationForm handleClose={handleClose} typeOfWorkId={typeOfWorkId} />\n            </Offcanvas.Body>\n        </Offcanvas>\n    );\n};\n\nexport default AddInformationSidePanel;","import React, { useEffect, useState } from \"react\";\nimport {Button} from \"react-bootstrap\";\n\ntype Props = {\n    src: string; // ссылка на PDF\n};\n\nconst SafePdfViewer = ({ src }: Props) => {\n    const [isPdfAvailable, setIsPdfAvailable] = useState(true);\n    const isMobile = /Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\n\n    useEffect(() => {\n        const checkPdfExists = async () => {\n            try {\n                const res = await fetch(src, { method: \"HEAD\" });\n                if (!res.ok) {\n                    setIsPdfAvailable(false);\n                }\n            } catch (err) {\n                setIsPdfAvailable(false);\n            }\n        };\n\n        checkPdfExists();\n    }, [src]);\n\n    if (!isPdfAvailable) {\n        return <p>\n            <i className=\"bi bi-exclamation-triangle-fill me-2\" ></i>\n            PDF-file not find\n        </p>;\n    }\n\n    if (isMobile) {\n        return (\n            <div className={'d-flex justify-content-end'}>\n                <Button variant={\"secondary\"} className={\"mb-2\"}\n                        onClick={() => window.location.href = src}>\n                    <i className=\"bi bi-file-earmark-pdf me-2\" ></i>\n                    Open File\n                </Button>\n            </div>\n        );\n    }\n\n    return (\n        <iframe\n            src={src}\n            style={{width: \"100%\", height: \"800px\", border: \"none\"}}\n        />\n    );\n};\n\nexport default SafePdfViewer;\n","import React from 'react';\nimport {useConstructionStore} from \"../../store/useConstructionStore\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport {usePlanInformationStore} from \"../../store/usePlanInformationStore\";\nimport {usePlanStore} from \"../../store/usePlanStore\";\n\ntype ConstructionDeleteModalProps = {\n    id:number,\n    showDeleteModal: boolean,\n    handleCloseDeleteModal:()=>void\n}\n\nconst DeleteModal = ({id, showDeleteModal, handleCloseDeleteModal}:ConstructionDeleteModalProps) => {\n    const {plan} = usePlanStore()\n    const { deletePlanInformation  } = usePlanInformationStore();\n    const handleDelete =() =>{\n        handleCloseDeleteModal();\n        deletePlanInformation(id, plan.id);\n    }\n\n    return (\n        <Modal show={showDeleteModal} onHide={handleCloseDeleteModal} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>Warning</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure you want to delete this information?</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\n                    Cancel\n                </Button>\n                <Button variant=\"danger\" onClick={handleDelete}>\n                    Delete\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default DeleteModal;","import React, {useState} from 'react';\nimport { PlanInformation } from \"../../types/PlanInformation\";\nimport {Accordion, Button} from \"react-bootstrap\";\nimport {SERVER_LINK} from \"../../globals\";\nimport SafePdfViewer from \"../SafePdfViewer\";\nimport DeleteModalInformation from \"./DeleteModalInformation\";\n\ntype Props = {\n    planInformations: PlanInformation[],\n    type_of_work_id: number\n};\n\nconst TypeOfWorkTabsContent = ({ planInformations, type_of_work_id }: Props) => {\n\n    const [id, setId] = useState(0);\n\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n    const handleCloseDeleteModal = () => {\n        setShowDeleteModal(false);\n        setId(0);\n    }\n\n    const handleShowDeleteModal = (id:number) => {\n        setId(id);\n        setShowDeleteModal(true);\n    }\n\n    return (\n        <>\n            <Accordion >\n                {planInformations\n                    .filter(item => item.type_of_work_id === type_of_work_id)\n                    .map(item => (\n\n                            <Accordion.Item eventKey={item.id.toString()}>\n                                <Accordion.Header>{item.name}</Accordion.Header>\n                                <Accordion.Body>\n                                    <div className={'d-flex justify-content-end'}>\n                                        <Button className={\"m-1\"} variant=\"danger\" onClick={() => handleShowDeleteModal(item.id)}>\n                                            <i className=\"bi bi-trash me-2\"></i>\n                                            Delete\n                                        </Button>\n                                    </div>\n                                    {item.text && <pre>{item.text}</pre>}\n                                    {item.type_of_file && (item.type_of_file !== 'application/pdf' ?\n                                            <img style={{maxWidth: \"100%\"}}\n                                                 src={SERVER_LINK + \"/uploads/\" + item.file}/> :\n                                            <SafePdfViewer src={SERVER_LINK + \"/uploads/\" + item.file}/>\n                                    )\n\n                                    }\n                                </Accordion.Body>\n                            </Accordion.Item>\n\n                    ))\n                }\n            </Accordion>\n            <DeleteModalInformation\n                id={id}\n                showDeleteModal={showDeleteModal}\n                handleCloseDeleteModal={handleCloseDeleteModal}\n            />\n        </>\n    );\n};\n\nexport default TypeOfWorkTabsContent;\n","import React, {useEffect, useState} from 'react';\nimport {Button, Tab, Tabs} from \"react-bootstrap\";\nimport {useTypeOfWorkStore} from \"../../store/useTypeOfWorkStore\";\nimport AddInformationSidePanel from \"./AddInformationSidePanel\";\nimport {usePlanInformationStore} from \"../../store/usePlanInformationStore\";\nimport TypesOfWorkTabsContent from \"./TypeOfWorkTabsContent\";\n\ntype Props={\n    plan_id: number\n}\n\nconst TypesOfWorkTabs = ({plan_id}:Props) => {\n    // Destructure state and action from company store\n    const { typesOfWork, fetchActiveTypesOfWork } = useTypeOfWorkStore();\n    const{planInformations, fetchPlanInformationsInPlan} = usePlanInformationStore();\n\n    const [typeOfWorkId, setTypeOfWorkId] = useState(0);\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = (id:number) => {\n        setShow(true);\n        setTypeOfWorkId(id);\n    }\n\n\n    // Fetch company data on component mount\n    useEffect(() => {\n        fetchActiveTypesOfWork();\n        fetchPlanInformationsInPlan(plan_id);\n    }, [plan_id]);\n\n    return (\n        <>\n            <h4>Types Of Work</h4>\n            <Tabs\n                defaultActiveKey=\"0\"\n                id=\"uncontrolled-tab-example\"\n                className=\"mb-3\"\n            >\n                {typesOfWork.map((typeOfWork, index) => (\n                    <Tab eventKey={index} title={typeOfWork.name} key={typeOfWork.id}>\n                        <div className={'d-flex justify-content-end'}>\n                            <Button className={\"mb-3\"} variant=\"primary\" onClick={()=>handleShow(typeOfWork.id)}>\n                                <i className=\"me-2 bi bi-plus-circle\"></i>\n                                Add\n                            </Button>\n                        </div>\n                        <TypesOfWorkTabsContent planInformations={planInformations} type_of_work_id={typeOfWork.id}/>\n\n                    </Tab>\n                ))}\n            </Tabs>\n            <AddInformationSidePanel show={show} handleClose={handleClose} typeOfWorkId={typeOfWorkId} />\n        </>\n    );\n};\n\nexport default TypesOfWorkTabs;","import React, {useEffect, useState} from 'react';\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {Alert, Button, Container} from \"react-bootstrap\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport EditSidePanel from \"../../components/plan/EditSidePanel\";\nimport BreadcrumbsComp from \"../../components/BreadcrumbsComp\";\nimport TypesOfWorkTabs from \"../../components/plan/TypesOfWorkTabs\";\n\nconst DetailPlan = () => {\n    const {plan,fetchPlan} = usePlanStore()\n    const navigate = useNavigate();\n\n    const { company_id, id } = useParams<{company_id:string, id: string }>();\n    const numberId= Number(id);\n    const numberCompanyId= Number(company_id);\n\n\n    const [showEditSidePanel, setShowEditSidePanel] = useState(false);\n    const handleCloseEditSidePanel = () => {\n        setShowEditSidePanel(false);\n    }\n    const handleShowEditSidePanel = (numberId:number) => {\n        setShowEditSidePanel(true);\n    }\n\n    useEffect(() => {\n        fetchPlan(numberId)\n    }, [showEditSidePanel]);\n\n\n    return (\n        <>\n            <Container>\n                <h1>{plan.name}</h1>\n                <hr></hr>\n                <Button className={\"me-2\"} variant=\"outline-secondary\"\n                        onClick={() => navigate(`/companies/${numberCompanyId}/${plan.construction_id}`)}>\n                    <i className=\"bi bi-arrow-left-circle\"></i>\n                </Button>\n                <Button className={\"ms-3\"} variant={\"outline-secondary\"}\n                        onClick={() => handleShowEditSidePanel(plan.id)}>\n                    <i className=\"bi bi-pencil me-2\"></i>\n                    Edit\n                </Button>\n                <hr></hr>\n                <BreadcrumbsComp openPageName ={plan.name}/>\n                {!plan.active &&\n                    <Alert key={'secondary'} variant={'secondary'}>\n                        Not active!\n                    </Alert>}\n                <hr></hr>\n                <TypesOfWorkTabs plan_id={plan.id} />\n\n            </Container>\n            <EditSidePanel\n                id={plan.id}\n                showEditSidePanel={showEditSidePanel}\n                handleCloseEditSidePanel={handleCloseEditSidePanel}\n            />\n        </>\n\n    );\n};\n\nexport default DetailPlan;"],"names":["isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","_excluded","AccordionCollapse","_ref","ref","as","Component","bsPrefix","className","children","props","_objectWithoutProperties","useContext","AccordionContext","useBootstrapPrefix","_jsx","Collapse","_objectSpread","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","onClick","accordionOnClick","onSelect","alwaysOpen","e","eventKeyPassed","filter","k","useAccordionButton","type","AccordionHeader","ariaControls","AccordionItem","contextValue","useMemo","Provider","value","Accordion","_useUncontrolled","useUncontrolled","activeKey","flush","controlledProps","prefix","concat","Object","assign","Button","Item","Header","Body","openPageName","paths","useLocation","pathname","split","Boolean","_jsxs","Breadcrumb","linkAs","Link","linkProps","to","map","segment","index","path","slice","join","length","active","decodeURIComponent","id","handleCloseEditSidePanel","plan","fetchPlan","updatePlan","usePlanStore","form","setForm","useState","name","construction_id","validated","setValidated","useEffect","Form","noValidate","onSubmit","async","data","currentTarget","preventDefault","checkValidity","stopPropagation","Col","Row","Group","controlId","Label","Control","required","placeholder","onChange","target","Feedback","Check","checked","label","variant","showEditSidePanel","Offcanvas","show","onHide","placement","closeButton","Title","EditPlanForm","handleClose","typeOfWorkId","state","addPlanInformation","usePlanInformationStore","type_of_work_id","plan_id","text","file","type_of_file","handleChange","files","rows","scroll","AddInformationForm","src","isPdfAvailable","setIsPdfAvailable","isMobile","test","navigator","userAgent","fetch","method","ok","err","checkPdfExists","window","location","href","style","width","height","border","showDeleteModal","handleCloseDeleteModal","deletePlanInformation","Modal","centered","Footer","handleDelete","planInformations","setId","setShowDeleteModal","_Fragment","item","toString","handleShowDeleteModal","maxWidth","SERVER_LINK","SafePdfViewer","DeleteModalInformation","typesOfWork","fetchActiveTypesOfWork","useTypeOfWorkStore","fetchPlanInformationsInPlan","setTypeOfWorkId","setShow","Tabs","defaultActiveKey","typeOfWork","Tab","title","handleShow","TypesOfWorkTabsContent","AddInformationSidePanel","DetailPlan","navigate","useNavigate","company_id","useParams","numberId","Number","numberCompanyId","setShowEditSidePanel","Container","BreadcrumbsComp","Alert","TypesOfWorkTabs","EditSidePanel"],"sourceRoot":""}