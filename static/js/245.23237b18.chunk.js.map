{"version":3,"file":"static/js/245.23237b18.chunk.js","mappings":"kPASA,MAiEA,EAjEgBA,IAAiC,IAAhC,YAACC,GAAyBD,EACvC,MAAOE,EAAMC,IAAWC,EAAAA,EAAAA,UAA0B,CAAEC,KAAM,GAAIC,KAAM,GAAIC,KAAM,OACvEC,EAAWC,IAAgBL,EAAAA,EAAAA,WAAS,GACrCM,GAAgBC,EAAAA,EAAAA,IAAmBC,GAASA,EAAMF,gBAElDG,EAAgBC,IAClBX,GAAOY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIb,GAAI,IAAE,CAACY,EAAEE,OAAOX,MAAOS,EAAEE,OAAOC,QAAQ,EAmBzD,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,YAAU,EAACZ,UAAWA,EAAWa,SAhBtBC,UACjB,MAAMC,EAAOT,EAAEU,cACfV,EAAEW,kBAE2B,IAAzBF,EAAKG,kBACLZ,EAAEW,iBACFX,EAAEa,mBAENlB,GAAa,IACgB,IAAzBc,EAAKG,wBAEHhB,EAAcR,GACpBC,EAAQ,CAAEE,KAAM,GAAIC,KAAM,GAAIC,KAAM,MACpCN,IAAa,EAGiD2B,UAC1DC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,mBAAkBH,SAAA,EAC7BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,qBAAoBN,SAAA,EACtCV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAC,wBACZV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACT/B,KAAK,OACLgC,UAAQ,EACRC,KAAK,OACLC,YAAY,oBACZtB,MAAOf,EAAKG,KACZmC,SAAU3B,KAEdK,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAQK,SAAQ,CAAAb,SAAC,sBAG/BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,qBAAoBN,SAAA,EACtCV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAC,WACZV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACT/B,KAAK,OACLgC,UAAQ,EACRC,KAAK,SACLI,aAAc,IACdzB,MAAOf,EAAKK,KACZiC,SAAU3B,KAEdK,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAQK,SAAQ,CAAAb,SAAC,sBAK/BV,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACZ,UAAW,OAASO,KAAK,SAAQV,SAAC,YAC1CV,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACC,QAAS3C,EAAa8B,UAAW,OAAQc,QAAS,SAASjB,SAAE,eAEtE,EChDf,EAbqB5B,IAA6C,IAA5C,KAAC8C,EAAI,YAAE7C,GAA+BD,EACxD,OACI6B,EAAAA,EAAAA,MAACkB,EAAAA,EAAS,CAACD,KAAMA,EAAME,UAAW,MAAOC,OAAQhD,EAAaiD,QAAQ,EAAKtB,SAAA,EACvEV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAUI,OAAM,CAACC,aAAW,EAAAxB,UACzBV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAUM,MAAK,CAAAzB,SAAC,2BAErBV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAUO,KAAI,CAAA1B,UACXV,EAAAA,EAAAA,KAACqC,EAAO,CAACtD,YAAaA,QAElB,E,wBCRpB,MAyBA,EAzBoBD,IAAqE,IAApE,GAACwD,EAAE,gBAAEC,EAAe,uBAAEC,GAAwC1D,EAC/E,MAAM,iBAAE2D,IAAsBhD,EAAAA,EAAAA,KAM9B,OACIkB,EAAAA,EAAAA,MAAC+B,EAAAA,EAAK,CAACd,KAAMW,EAAiBR,OAAQS,EAAwBG,UAAQ,EAAAjC,SAAA,EAClEV,EAAAA,EAAAA,KAAC0C,EAAAA,EAAMT,OAAM,CAACC,aAAW,EAAAxB,UACrBV,EAAAA,EAAAA,KAAC0C,EAAAA,EAAMP,MAAK,CAAAzB,SAAC,eAEjBV,EAAAA,EAAAA,KAAC0C,EAAAA,EAAMN,KAAI,CAAA1B,SAAC,uDACZC,EAAAA,EAAAA,MAAC+B,EAAAA,EAAME,OAAM,CAAAlC,SAAA,EACTV,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACE,QAAQ,YAAYD,QAASc,EAAuB9B,SAAC,YAG7DV,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACE,QAAQ,SAASD,QAfjBmB,KAChBL,IACAC,EAAiBH,EAAG,EAamC5B,SAAC,gBAIhD,EC8DhB,EAlFiB5B,IAAmD,IAAlD,GAACwD,EAAE,yBAAEQ,GAAuChE,EAC1D,MAAM,WAAEiE,EAAU,gBAAEC,EAAe,iBAAGC,IAAqBxD,EAAAA,EAAAA,MACpDT,EAAMC,IAAWC,EAAAA,EAAAA,UAA8B,CAACoD,GAAG,EAAGnD,KAAM,GAAIC,KAAM,GAAI8D,QAAO,EAAM7D,KAAK,OAC5FC,EAAWC,IAAgBL,EAAAA,EAAAA,WAAS,GAErCS,EAAgBC,IAClBX,GAAOY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIb,GAAI,IAAE,CAACY,EAAEE,OAAOX,MAAOS,EAAEE,OAAOC,QAAQ,EAyBzD,OANAoD,EAAAA,EAAAA,YAAU,KACNH,EAAgBV,EAAG,GACpB,KACHa,EAAAA,EAAAA,YAAU,KACNlE,EAAQ,CAACqD,GAAGA,EAAInD,KAAgB,OAAV4D,QAAU,IAAVA,OAAU,EAAVA,EAAY5D,KAAMC,KAAgB,OAAV2D,QAAU,IAAVA,OAAU,EAAVA,EAAY3D,KAAM8D,OAAiB,OAAVH,QAAU,IAAVA,OAAU,EAAVA,EAAYG,OAAQ7D,KAAe,OAAV0D,QAAU,IAAVA,OAAU,EAAVA,EAAY1D,MAAM,GACnH,CAAC0D,KAEA/C,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,YAAU,EAACZ,UAAWA,EAAWa,SAvBtBC,UACjB,MAAMC,EAAOT,EAAEU,cACfV,EAAEW,kBAE2B,IAAzBF,EAAKG,kBACLZ,EAAEW,iBACFX,EAAEa,mBAENlB,GAAa,IACgB,IAAzBc,EAAKG,wBAEHyC,EAAiBjE,GACvBC,EAAQ,CAACqD,GAAG,EAAGnD,KAAM,GAAIC,KAAM,GAAI8D,QAAQ,EAAO7D,KAAM,MACxDyD,IAA0B,EAUoCpC,UAC1DC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,mBAAkBH,SAAA,EAC7BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,qBAAoBN,SAAA,EACtCV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAC,wBACZV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACT/B,KAAK,OACLgC,UAAQ,EACRC,KAAK,OACLC,YAAY,oBACZtB,MAAOf,EAAKG,KACZmC,SAAU3B,KAEdK,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAQK,SAAQ,CAAAb,SAAC,sBAG/BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BC,EAAAA,EAAAA,MAACV,EAAAA,EAAKc,MAAK,CAACC,UAAU,qBAAoBN,SAAA,EACtCV,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,MAAK,CAAAP,SAAC,WACZV,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAO,CACT/B,KAAK,OACLgC,UAAQ,EACRC,KAAK,SACLrB,MAAOf,EAAKK,KACZiC,SAAU3B,KAEdK,EAAAA,EAAAA,KAACC,EAAAA,EAAKiB,QAAQK,SAAQ,CAAAb,SAAC,sBAG/BV,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACD,UAAU,mBAAkBH,UAC7BV,EAAAA,EAAAA,KAACC,EAAAA,EAAKc,MAAK,CAAAL,UACPV,EAAAA,EAAAA,KAACC,EAAAA,EAAKmD,MAAK,CACPC,QAASrE,EAAKkE,OACd9B,KAAK,SACLkB,GAAG,gBACHgB,MAAM,SACNhC,SAAW1B,GAAIX,GAAOY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGb,GAAI,IAAEkE,OAAQtD,EAAEE,OAAOuD,kBAO9DrD,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACZ,UAAW,OAASO,KAAK,SAAQV,SAAC,YAC1CV,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACC,QAASoB,EAA0BjC,UAAW,OAAQc,QAAS,SAASjB,SAAE,eAEnF,ECjEf,EAbsB5B,IAA4E,IAA3E,GAACwD,EAAE,kBAAEiB,EAAiB,yBAAET,GAA6ChE,EACxF,OACI6B,EAAAA,EAAAA,MAACkB,EAAAA,EAAS,CAACD,KAAM2B,EAAmBxB,OAAQe,EAA0BhB,UAAW,MAAMpB,SAAA,EACnFV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAUI,OAAM,CAACC,aAAW,EAAAxB,UACzBV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAUM,MAAK,CAAAzB,SAAC,yBAErBV,EAAAA,EAAAA,KAAC6B,EAAAA,EAAUO,KAAI,CAAA1B,UACXV,EAAAA,EAAAA,KAACwD,EAAQ,CAAClB,GAAIA,EAAIQ,yBAA0BA,QAExC,EC0EpB,EAxFaW,KAET,MAAM,YAAEC,EAAW,iBAAEC,IAAqBlE,EAAAA,EAAAA,MAGnC6C,EAAIsB,IAAS1E,EAAAA,EAAAA,UAAS,IAGtBqD,EAAiBsB,IAAsB3E,EAAAA,EAAAA,WAAS,IAWhDqE,EAAmBO,IAAwB5E,EAAAA,EAAAA,WAAS,GAe3D,OAJAiE,EAAAA,EAAAA,YAAU,KACNQ,GAAkB,GACnB,KAGChD,EAAAA,EAAAA,MAAAoD,EAAAA,SAAA,CAAArD,SAAA,EACIC,EAAAA,EAAAA,MAACqD,EAAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAAzD,SAAA,EACzBV,EAAAA,EAAAA,KAAA,SAAAU,UACAC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIV,EAAAA,EAAAA,KAAA,MAAAU,SAAI,OACJV,EAAAA,EAAAA,KAAA,MAAIa,UAAU,aAAYH,SAAC,UAC3BV,EAAAA,EAAAA,KAAA,MAAAU,SAAI,UACJV,EAAAA,EAAAA,KAAA,MAAAU,SAAI,iBAGRV,EAAAA,EAAAA,KAAA,SAAAU,SACCgD,EAAYU,KAAKrB,IAEdpC,EAAAA,EAAAA,MAAA,MAAIE,UAAYkC,EAAWG,OAAwC,GAA/B,6BAAkCxC,SAAA,EAClEV,EAAAA,EAAAA,KAAA,MAAAU,SAAKqC,EAAWT,MAChBtC,EAAAA,EAAAA,KAAA,MAAIa,UAAU,aAAYH,SACrBqC,EAAW5D,QAGhBa,EAAAA,EAAAA,KAAA,MAAIa,UAAU,OAAMH,SAAEqC,EAAW1D,QACjCsB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EAEIV,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACE,QAAQ,YAAYd,UAAU,MAAMa,QAASA,IAjC5CY,KAC7BsB,EAAMtB,GACNwB,GAAqB,EAAK,EA+BqDO,CAAwBtB,EAAWT,IAAI5B,UAC9FV,EAAAA,EAAAA,KAAA,KAAGa,UAAU,oBAIjBb,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACE,QAAQ,SAASd,UAAU,MAAMa,QAASA,IAjD3CY,KAC3BsB,EAAMtB,GACNuB,GAAmB,EAAK,EA+CoDS,CAAsBvB,EAAWT,IAAI5B,UACzFV,EAAAA,EAAAA,KAAA,KAAGa,UAAU,uBAfmDkC,EAAWT,YAwB/FtC,EAAAA,EAAAA,KAACuE,EAAW,CACRjC,GAAIA,EACJC,gBAAiBA,EACjBC,uBAlEmBA,KAC3BqB,GAAmB,GACnBD,EAAM,EAAE,KAoEJ5D,EAAAA,EAAAA,KAACwE,EAAa,CACVlC,GAAIA,EACJiB,kBAAmBA,EACnBT,yBA9DqBA,KAC7BgB,GAAqB,GACrBF,EAAM,EAAE,MA8DL,EC3DX,EAzBoBa,KAEhB,MAAO7C,EAAM8C,IAAWxF,EAAAA,EAAAA,WAAS,GAIjC,OACIyB,EAAAA,EAAAA,MAAAoD,EAAAA,SAAA,CAAArD,SAAA,EACIC,EAAAA,EAAAA,MAACgE,EAAAA,EAAS,CAAAjE,SAAA,EACNV,EAAAA,EAAAA,KAAA,MAAAU,SAAI,mBACJV,EAAAA,EAAAA,KAAC4E,EAAAA,EAAe,CAACC,aAAc,mBAC/B7E,EAAAA,EAAAA,KAAA,OAAKa,UAAW,kCAAkCH,UAC9CC,EAAAA,EAAAA,MAACc,EAAAA,EAAM,CAACE,QAAQ,UAAUD,QARvBoD,IAAMJ,GAAQ,GAQ6BhE,SAAA,EAC1CV,EAAAA,EAAAA,KAAA,KAAGa,UAAU,2BAA6B,iBAIlDb,EAAAA,EAAAA,KAACyD,EAAI,QAETzD,EAAAA,EAAAA,KAAC+E,EAAY,CAACnD,KAAMA,EAAM7C,YAhBdA,IAAM2F,GAAQ,OAiB3B,C,mECnBX,MA4BA,EA5BwB5F,IAA0C,IAAzC,aAAC+F,GAAkC/F,EACxD,MACMkG,GADWC,EAAAA,EAAAA,MACMC,SAASC,MAAM,KAAKC,OAAOC,SAElD,OACI1E,EAAAA,EAAAA,MAAC2E,EAAAA,EAAU,CAAA5E,SAAA,EACPV,EAAAA,EAAAA,KAACsF,EAAAA,EAAWC,KAAI,CAACC,OAAQC,EAAAA,GAAMC,UAAW,CAAEC,GAAI,KAAMjF,SAAC,SAItDsE,EAAMZ,KAAI,CAACwB,EAASC,KACjB,MAAMC,EAAO,IAAMd,EAAMe,MAAM,EAAGF,EAAQ,GAAGG,KAAK,KAGlD,OAFeH,IAAUb,EAAMiB,OAAS,GAGpCjG,EAAAA,EAAAA,KAACsF,EAAAA,EAAWC,KAAI,CAACrC,QAAM,EAAAxC,SAClBmE,GADwBiB,IAI7B9F,EAAAA,EAAAA,KAACsF,EAAAA,EAAWC,KAAI,CAACC,OAAQC,EAAAA,GAAMC,UAAW,CAAEC,GAAIG,GAAOpF,SAClDwF,mBAAmBN,IADqCE,EAGhE,MAEI,C,wGC/BR,MAAAK,EAAA,iGAMPnC,EAAqBoC,EAAAA,YAAiB,CAAAtH,EAWzCuH,KAAQ,IAXkC,SAC3CC,EAAQ,UACRzF,EAAS,QACToD,EAAO,SACPC,EAAQ,WACRqC,EAAU,MACVpC,EAAK,KACLqC,EAAI,QACJ7E,EAAO,WACP8E,GAED3H,EADI4H,GAAKC,EAAAA,EAAAA,GAAA7H,EAAAqH,GAER,MAAMS,GAAoBC,EAAAA,EAAAA,IAAmBP,EAAU,SACjDQ,EAAUC,IAAWlG,EAAW+F,EAAmBjF,GAAW,GAAJqF,OAAOJ,EAAiB,KAAAI,OAAIrF,GAAW6E,GAAQ,GAAJQ,OAAOJ,EAAiB,KAAAI,OAAIR,GAAQvC,GAAW,GAAJ+C,OAAOJ,EAAiB,KAAAI,OAAuB,kBAAZ/C,EAAuB,WAAH+C,OAAc/C,GAAY,WAAaC,GAAY,GAAJ8C,OAAOJ,EAAiB,aAAaL,GAAc,GAAJS,OAAOJ,EAAiB,eAAezC,GAAS,GAAJ6C,OAAOJ,EAAiB,WACzWK,GAAqBjH,EAAAA,EAAAA,KAAK,SAAOH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClC6G,GAAK,IACR7F,UAAWiG,EACXT,IAAKA,KAEP,GAAII,EAAY,CACd,IAAIS,EAAkB,GAAHF,OAAMJ,EAAiB,eAI1C,MAH0B,kBAAfH,IACTS,EAAkB,GAAHF,OAAME,EAAe,KAAAF,OAAIP,KAEtBzG,EAAAA,EAAAA,KAAK,MAAO,CAC9Ba,UAAWqG,EACXxG,SAAUuG,GAEd,CACA,OAAOA,CAAK,IAEdjD,EAAMmD,YAAc,QACpB,S","sources":["components/typesOfWork/AddForm.tsx","components/typesOfWork/AddSidePanel.tsx","components/typesOfWork/DeleteModal.tsx","components/typesOfWork/EditForm.tsx","components/typesOfWork/EditSidePanel.tsx","components/typesOfWork/List.tsx","pages/TypesOfWork.tsx","components/BreadcrumbsComp.tsx","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {TypeOfWorkInput} from \"../../types/TypeOfWork\";\r\nimport {useTypeOfWorkStore} from \"../../store/useTypeOfWorkStore\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\n\r\ntype AddFormProps = {\r\n    handleClose:()=>void\r\n}\r\n\r\nconst AddForm = ({handleClose}:AddFormProps) => {\r\n    const [form, setForm] = useState<TypeOfWorkInput>({ name: '', text: '', sort: 500 });\r\n    const [validated, setValidated] = useState(false);\r\n    const addTypeOfWork = useTypeOfWorkStore(state => state.addTypeOfWork);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        const data = e.currentTarget as HTMLFormElement;\r\n        e.preventDefault();\r\n\r\n        if (data.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n        setValidated(true);\r\n        if (data.checkValidity() === false) return;\r\n\r\n        await addTypeOfWork(form);\r\n        setForm({ name: '', text: '', sort: 500 });\r\n        handleClose()\r\n    };\r\n    return (\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Col className=\"mb-3 text-start \">\r\n                <Row className=\"mb-3 text-start \">\r\n                    <Form.Group controlId=\"validationCustom01\">\r\n                        <Form.Label>Type Of Work Name*</Form.Label>\r\n                        <Form.Control\r\n                            name=\"name\"\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Type Of Work Name\"\r\n                            value={form.name}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className=\"mb-3 text-start \">\r\n                    <Form.Group controlId=\"validationCustom01\">\r\n                        <Form.Label>Sort*</Form.Label>\r\n                        <Form.Control\r\n                            name=\"sort\"\r\n                            required\r\n                            type=\"number\"\r\n                            defaultValue={500}\r\n                            value={form.sort}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Row>\r\n\r\n\r\n                <Button className={\"mx-1\"}  type=\"submit\">Create</Button>\r\n                <Button onClick={handleClose} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\r\n            </Col>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default AddForm;","import React from 'react';\r\nimport {Offcanvas} from \"react-bootstrap\";\r\nimport AddForm from \"./AddForm\";\r\n\r\ntype AddSidePanelProps = {\r\n    show: boolean;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst AddSidePanel = ({show, handleClose}: AddSidePanelProps) => {\r\n    return (\r\n        <Offcanvas show={show} placement={\"end\"} onHide={handleClose} scroll={true} >\r\n            <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Create Type Of Work</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <AddForm handleClose={handleClose} />\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    );\r\n};\r\n\r\nexport default AddSidePanel;","import React from 'react';\r\nimport {useTypeOfWorkStore} from \"../../store/useTypeOfWorkStore\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\ntype DeleteModalProps = {\r\n    id:number,\r\n    showDeleteModal: boolean,\r\n    handleCloseDeleteModal:()=>void\r\n}\r\n\r\nconst DeleteModal = ({id, showDeleteModal, handleCloseDeleteModal}:DeleteModalProps) => {\r\n    const { deleteTypeOfWork  } = useTypeOfWorkStore();\r\n    const handleDelete =() =>{\r\n        handleCloseDeleteModal();\r\n        deleteTypeOfWork(id);\r\n    }\r\n\r\n    return (\r\n        <Modal show={showDeleteModal} onHide={handleCloseDeleteModal} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Warning</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Are you sure you want to delete the type of work?</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Delete\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DeleteModal;","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {useCompanyStore} from \"../../store/useCompanyStore\";\nimport {useTypeOfWorkStore} from \"../../store/useTypeOfWorkStore\";\nimport {TypeOfWorkInputEdit} from \"../../types/TypeOfWork\";\n\ntype EditFormProps = {\n    id:number,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditForm = ({id, handleCloseEditSidePanel}:EditFormProps) => {\n    const { typeOfWork, fetchTypeOfWork,  updateTypeOfWork } = useTypeOfWorkStore();\n    const [form, setForm] = useState<TypeOfWorkInputEdit>({id:0, name: '', text: '', active:true, sort:500});\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await updateTypeOfWork(form);\n        setForm({id:0, name: '', text: '', active: true , sort: 500 });\n        handleCloseEditSidePanel()\n    };\n\n    useEffect(() => {\n        fetchTypeOfWork(id);\n    }, []);\n    useEffect(() => {\n        setForm({id:id, name: typeOfWork?.name, text: typeOfWork?.text, active:typeOfWork?.active, sort:typeOfWork?.sort});\n    }, [typeOfWork]);\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Type Of Work Name*</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Type Of Work Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Sort*</Form.Label>\n                        <Form.Control\n                            name=\"sort\"\n                            required\n                            type=\"number\"\n                            value={form.sort}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Check\n                            checked={form.active}\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"Active\"\n                            onChange={(e)=>setForm({...form, active: e.target.checked\n                            })}\n                        />\n                    </Form.Group>\n\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Update</Button>\n                <Button onClick={handleCloseEditSidePanel} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default EditForm;","import React from 'react';\r\nimport {Offcanvas} from \"react-bootstrap\";\r\nimport EditForm from \"./EditForm\";\r\n\r\ntype EditSidePanelProps = {\r\n    id:number,\r\n    showEditSidePanel: boolean,\r\n    handleCloseEditSidePanel:()=>void\r\n}\r\n\r\n\r\nconst EditSidePanel = ({id, showEditSidePanel, handleCloseEditSidePanel }:EditSidePanelProps) => {\r\n    return (\r\n        <Offcanvas show={showEditSidePanel} onHide={handleCloseEditSidePanel} placement={\"end\"} >\r\n            <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Edit Type Of Work</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n                <EditForm id={id} handleCloseEditSidePanel={handleCloseEditSidePanel} />\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    );\r\n};\r\n\r\nexport default EditSidePanel;","import React, { useEffect, useState } from 'react';\nimport { Button, Table } from \"react-bootstrap\";\nimport { useTypeOfWorkStore } from '../../store/useTypeOfWorkStore';\nimport DeleteModal from \"./DeleteModal\";\nimport EditSidePanel from \"./EditSidePanel\";\n\nconst List = () => {\n    // Destructure state and action from company store\n    const { typesOfWork, fetchTypesOfWork } = useTypeOfWorkStore();\n\n    // ID used for editing or deleting a company\n    const [id, setId] = useState(0);\n\n    // Delete modal state and handlers\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n    const handleCloseDeleteModal = () => {\n        setShowDeleteModal(false);\n        setId(0);\n    }\n    const handleShowDeleteModal = (id: number) => {\n        setId(id);\n        setShowDeleteModal(true);\n    }\n\n    // Edit side panel state and handlers\n    const [showEditSidePanel, setShowEditSidePanel] = useState(false);\n    const handleCloseEditSidePanel = () => {\n        setShowEditSidePanel(false);\n        setId(0);\n    }\n    const handleShowEditSidePanel = (id: number) => {\n        setId(id);\n        setShowEditSidePanel(true);\n    }\n\n    // Fetch company data on component mount\n    useEffect(() => {\n        fetchTypesOfWork();\n    }, []);\n\n    return (\n        <>\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th className=\"text-start\">Name</th>\n                    <th>Sort</th>\n                    <th>Action</th>\n                </tr>\n                </thead>\n                <tbody>\n                {typesOfWork.map((typeOfWork) => (\n                    // Apply gray style to inactive companies\n                    <tr className={!typeOfWork.active ? 'table-secondary text-muted' : ''} key={typeOfWork.id}>\n                        <td>{typeOfWork.id}</td>\n                        <td className=\"text-start\">\n                            {typeOfWork.name}\n                        </td>\n                        {/* Format the creation date */}\n                        <td className=\"w-25\">{typeOfWork.sort}</td>\n                        <td>\n                            {/* Edit button opens side panel */}\n                            <Button variant=\"secondary\" className=\"m-1\" onClick={() => handleShowEditSidePanel(typeOfWork.id)}>\n                                <i className=\"bi bi-pencil\"></i>\n                            </Button>\n\n                            {/* Delete button opens modal */}\n                            <Button variant=\"danger\" className=\"m-1\" onClick={() => handleShowDeleteModal(typeOfWork.id)}>\n                                <i className=\"bi bi-trash\"></i>\n                            </Button>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </Table>\n\n            {/* Delete confirmation modal */}\n            <DeleteModal\n                id={id}\n                showDeleteModal={showDeleteModal}\n                handleCloseDeleteModal={handleCloseDeleteModal}\n            />\n\n            {/* Edit side panel */}\n            <EditSidePanel\n                id={id}\n                showEditSidePanel={showEditSidePanel}\n                handleCloseEditSidePanel={handleCloseEditSidePanel}\n            />\n        </>\n    );\n};\n\nexport default List;\n","import React, {useState} from 'react';\nimport {Button, Container} from \"react-bootstrap\";\nimport BreadcrumbsComp from \"../components/BreadcrumbsComp\";\nimport AddSidePanel from \"../components/typesOfWork/AddSidePanel\";\nimport List from \".././components/typesOfWork/List\"\n\nconst TypesOfWork = () => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Container>\n                <h1>Types of work</h1>\n                <BreadcrumbsComp openPageName={\"Types of work\"}/>\n                <div className={'d-flex justify-content-end mb-3'}>\n                    <Button variant=\"primary\" onClick={handleShow}>\n                        <i className=\"me-2 bi bi-plus-circle\"></i>\n                        Add Type\n                    </Button>\n                </div>\n                <List/>\n            </Container>\n            <AddSidePanel show={show} handleClose={handleClose}/>\n        </>\n\n    );\n};\n\nexport default TypesOfWork;","import { Breadcrumb } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\n\ntype BreadcrumbsCompProps ={\n    openPageName : string\n}\n\nconst BreadcrumbsComp = ({openPageName}:BreadcrumbsCompProps) => {\n    const location = useLocation();\n    const paths = location.pathname.split('/').filter(Boolean);\n\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item linkAs={Link} linkProps={{ to: '/' }}>\n                Home\n            </Breadcrumb.Item>\n\n            {paths.map((segment, index) => {\n                const path = '/' + paths.slice(0, index + 1).join('/');\n                const isLast = index === paths.length - 1;\n\n                return isLast ? (\n                    <Breadcrumb.Item active key={path}>\n                        {openPageName}\n                    </Breadcrumb.Item>\n                ) : (\n                    <Breadcrumb.Item linkAs={Link} linkProps={{ to: path }} key={path}>\n                        {decodeURIComponent(segment)}\n                    </Breadcrumb.Item>\n                );\n            })}\n        </Breadcrumb>\n    );\n};\n\nexport default BreadcrumbsComp;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nTable.displayName = 'Table';\nexport default Table;"],"names":["_ref","handleClose","form","setForm","useState","name","text","sort","validated","setValidated","addTypeOfWork","useTypeOfWorkStore","state","handleChange","e","_objectSpread","target","value","_jsx","Form","noValidate","onSubmit","async","data","currentTarget","preventDefault","checkValidity","stopPropagation","children","_jsxs","Col","className","Row","Group","controlId","Label","Control","required","type","placeholder","onChange","Feedback","defaultValue","Button","onClick","variant","show","Offcanvas","placement","onHide","scroll","Header","closeButton","Title","Body","AddForm","id","showDeleteModal","handleCloseDeleteModal","deleteTypeOfWork","Modal","centered","Footer","handleDelete","handleCloseEditSidePanel","typeOfWork","fetchTypeOfWork","updateTypeOfWork","active","useEffect","Check","checked","label","showEditSidePanel","EditForm","List","typesOfWork","fetchTypesOfWork","setId","setShowDeleteModal","setShowEditSidePanel","_Fragment","Table","striped","bordered","hover","map","handleShowEditSidePanel","handleShowDeleteModal","DeleteModal","EditSidePanel","TypesOfWork","setShow","Container","BreadcrumbsComp","openPageName","handleShow","AddSidePanel","paths","useLocation","pathname","split","filter","Boolean","Breadcrumb","Item","linkAs","Link","linkProps","to","segment","index","path","slice","join","length","decodeURIComponent","_excluded","React","ref","bsPrefix","borderless","size","responsive","props","_objectWithoutProperties","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","responsiveClass","displayName"],"sourceRoot":""}