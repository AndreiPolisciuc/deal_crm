{"version":3,"file":"static/js/875.478579a0.chunk.js","mappings":"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","sources":["components/BreadcrumbsComp.tsx","components/plan/EditPlanForm.tsx","components/plan/EditSidePanel.tsx","components/plan/AddInformationForm.tsx","components/plan/AddInformationSidePanel.tsx","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","components/SafePdfViewer.tsx","components/plan/DeleteModalInformation.tsx","components/plan/TypeOfWorkTabsContent.tsx","components/plan/TypesOfWorkTabs.tsx","pages/company/DetailPlan.tsx"],"sourcesContent":["import { Breadcrumb } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\n\ntype BreadcrumbsCompProps ={\n    openPageName : string\n}\n\nconst BreadcrumbsComp = ({openPageName}:BreadcrumbsCompProps) => {\n    const location = useLocation();\n    const paths = location.pathname.split('/').filter(Boolean);\n\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item linkAs={Link} linkProps={{ to: '/' }}>\n                Home\n            </Breadcrumb.Item>\n\n            {paths.map((segment, index) => {\n                const path = '/' + paths.slice(0, index + 1).join('/');\n                const isLast = index === paths.length - 1;\n\n                return isLast ? (\n                    <Breadcrumb.Item active key={path}>\n                        {openPageName}\n                    </Breadcrumb.Item>\n                ) : (\n                    <Breadcrumb.Item linkAs={Link} linkProps={{ to: path }} key={path}>\n                        {decodeURIComponent(segment)}\n                    </Breadcrumb.Item>\n                );\n            })}\n        </Breadcrumb>\n    );\n};\n\nexport default BreadcrumbsComp;\n","import React, {useEffect, useState} from 'react';\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {PlanInputEdit} from \"../../types/Plan\";\n\ntype PlanEditFormProps = {\n    id:number,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditPlanForm = ({id, handleCloseEditSidePanel}:PlanEditFormProps) => {\n    const {plan, fetchPlan, updatePlan} = usePlanStore();\n    const [form, setForm] = useState<PlanInputEdit>({id:0, name: '', active:true, construction_id: 0});\n    const [validated, setValidated] = useState(false);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n\n        await updatePlan(form);\n        setForm({id:0, name: '', active: true,  construction_id: 0 });\n        handleCloseEditSidePanel()\n    };\n\n    useEffect(() => {\n        fetchPlan(id);\n    }, []);\n    useEffect(() => {\n        setForm({id:id, name: plan?.name, active:plan?.active, construction_id:plan?.construction_id});\n    }, [plan]);\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Plan Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Plan Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group>\n                        <Form.Check\n                            checked={form.active}\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"Active\"\n                            onChange={(e)=>setForm({...form, active: e.target.checked\n                            })}\n                        />\n                    </Form.Group>\n\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Update</Button>\n                <Button onClick={handleCloseEditSidePanel} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default EditPlanForm;","import React from 'react';\nimport {Offcanvas} from \"react-bootstrap\";\nimport EditPlanForm from \"./EditPlanForm\";\n\ntype PlanEditSidePanelProps = {\n    id:number,\n    showEditSidePanel: boolean,\n    handleCloseEditSidePanel:()=>void\n}\n\nconst EditSidePanel = ({id, showEditSidePanel, handleCloseEditSidePanel }:PlanEditSidePanelProps) => {\n    return (\n        <Offcanvas show={showEditSidePanel} onHide={handleCloseEditSidePanel} placement={\"end\"} >\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>Edit Plan</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                <EditPlanForm id={id} handleCloseEditSidePanel={handleCloseEditSidePanel} />\n            </Offcanvas.Body>\n        </Offcanvas>\n    );\n};\n\nexport default EditSidePanel;","import React, {useState} from 'react';\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {usePlanInformationStore} from \"../../store/usePlanInformationStore\";\nimport {PlanInformationInputAdd} from \"../../types/PlanInformation\";\n\ntype Props = {\n    handleClose:()=>void,\n    typeOfWorkId:number\n}\n\nconst AddInformationForm = ({handleClose, typeOfWorkId}:Props) => {\n    const plan = usePlanStore(state=> state.plan)\n    const addPlanInformation = usePlanInformationStore(state=> state.addPlanInformation)\n    const [form, setForm] = useState<PlanInformationInputAdd>({ name: '',type_of_work_id:typeOfWorkId, plan_id:plan.id, text:'', file: null, type_of_file:''});\n    const [validated, setValidated] = useState(false);\n\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        const data = e.currentTarget as HTMLFormElement;\n        e.preventDefault();\n\n        if (data.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        if (data.checkValidity() === false) return;\n        await addPlanInformation(form);\n        setForm({ name: '', text:'', type_of_work_id:0, plan_id:plan.id, file: null, type_of_file:'' });\n        handleClose()\n    };\n\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            setForm({ ...form, file: e.target.files[0] });\n        }\n    };\n\n\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Col className=\"mb-3 text-start \">\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"validationCustom01\">\n                        <Form.Label>Name*</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Name\"\n                            value={form.name}\n                            onChange={handleChange}\n                        />\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start \">\n                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                        <Form.Label>Default file input example</Form.Label>\n                        <Form.Control\n                            name={\"file\"}\n                            onChange={handleFileChange}\n                            type=\"file\"\n                        />\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3 text-start\">\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label >Text</Form.Label>\n                        <Form.Control\n                            className=\"mb-3\"\n                            as=\"textarea\"\n                            rows={3}\n                            name=\"text\"\n                            onChange={handleChange}\n                        />\n                    </Form.Group>\n                </Row>\n\n                <Button className={\"mx-1\"}  type=\"submit\">Create</Button>\n                <Button onClick={handleClose} className={\"mx-1\"} variant={\"danger\"} >Cancel</Button>\n            </Col>\n        </Form>\n    );\n};\n\nexport default AddInformationForm;","import React from 'react';\nimport {Offcanvas} from \"react-bootstrap\";\nimport AddInformationForm from \"./AddInformationForm\";\n\ntype AddInformationSidePanelProps ={\n    show:boolean,\n    handleClose: ()=>void,\n    typeOfWorkId: number\n}\n\nconst AddInformationSidePanel = ({show, handleClose, typeOfWorkId}:AddInformationSidePanelProps) => {\n    return (\n        <Offcanvas show={show} placement={\"end\"} onHide={handleClose} scroll={true} >\n            <Offcanvas.Header closeButton>\n                <Offcanvas.Title>Add Information</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n                <AddInformationForm handleClose={handleClose} typeOfWorkId={typeOfWorkId} />\n            </Offcanvas.Body>\n        </Offcanvas>\n    );\n};\n\nexport default AddInformationSidePanel;","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null || onSelect(eventKeyPassed, e);\n    onClick == null || onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  'aria-controls': ariaControls,\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      \"aria-controls\": ariaControls,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React, { useEffect, useState } from \"react\";\nimport {Button} from \"react-bootstrap\";\n\ntype Props = {\n    src: string; // ссылка на PDF\n};\n\nconst SafePdfViewer = ({ src }: Props) => {\n    const [isPdfAvailable, setIsPdfAvailable] = useState(true);\n    const isMobile = /Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\n\n    useEffect(() => {\n        const checkPdfExists = async () => {\n            try {\n                const res = await fetch(src, { method: \"HEAD\" });\n                if (!res.ok) {\n                    setIsPdfAvailable(false);\n                }\n            } catch (err) {\n                setIsPdfAvailable(false);\n            }\n        };\n\n        checkPdfExists();\n    }, [src]);\n\n    if (!isPdfAvailable) {\n        return <p>\n            <i className=\"bi bi-exclamation-triangle-fill me-2\" ></i>\n            PDF-file not find\n        </p>;\n    }\n\n    if (isMobile) {\n        return (\n            <div className={'d-flex justify-content-end'}>\n                <Button variant={\"secondary\"} className={\"mb-2\"}\n                        onClick={() => window.location.href = src}>\n                    <i className=\"bi bi-file-earmark-pdf me-2\" ></i>\n                    Open File\n                </Button>\n            </div>\n        );\n    }\n\n    return (\n        <iframe\n            src={src}\n            style={{width: \"100%\", height: \"800px\", border: \"none\"}}\n        />\n    );\n};\n\nexport default SafePdfViewer;\n","import React from 'react';\nimport {useConstructionStore} from \"../../store/useConstructionStore\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport {usePlanInformationStore} from \"../../store/usePlanInformationStore\";\nimport {usePlanStore} from \"../../store/usePlanStore\";\n\ntype ConstructionDeleteModalProps = {\n    id:number,\n    showDeleteModal: boolean,\n    handleCloseDeleteModal:()=>void\n}\n\nconst DeleteModal = ({id, showDeleteModal, handleCloseDeleteModal}:ConstructionDeleteModalProps) => {\n    const {plan} = usePlanStore()\n    const { deletePlanInformation  } = usePlanInformationStore();\n    const handleDelete =() =>{\n        handleCloseDeleteModal();\n        deletePlanInformation(id, plan.id);\n    }\n\n    return (\n        <Modal show={showDeleteModal} onHide={handleCloseDeleteModal} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>Warning</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure you want to delete this information?</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\n                    Cancel\n                </Button>\n                <Button variant=\"danger\" onClick={handleDelete}>\n                    Delete\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default DeleteModal;","import React, {useState} from 'react';\nimport { PlanInformation } from \"../../types/PlanInformation\";\nimport {Accordion, Button} from \"react-bootstrap\";\nimport {SERVER_LINK} from \"../../globals\";\nimport SafePdfViewer from \"../SafePdfViewer\";\nimport DeleteModalInformation from \"./DeleteModalInformation\";\n\ntype Props = {\n    planInformations: PlanInformation[],\n    type_of_work_id: number\n};\n\nconst TypeOfWorkTabsContent = ({ planInformations, type_of_work_id }: Props) => {\n\n    const [id, setId] = useState(0);\n\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n    const handleCloseDeleteModal = () => {\n        setShowDeleteModal(false);\n        setId(0);\n    }\n\n    const handleShowDeleteModal = (id:number) => {\n        setId(id);\n        setShowDeleteModal(true);\n    }\n\n    return (\n        <>\n            <Accordion >\n                {planInformations\n                    .filter(item => item.type_of_work_id === type_of_work_id)\n                    .map(item => (\n\n                            <Accordion.Item eventKey={item.id.toString()}>\n                                <Accordion.Header>{item.name}</Accordion.Header>\n                                <Accordion.Body>\n                                    <div className={'d-flex justify-content-end'}>\n                                        <Button className={\"m-1\"} variant=\"danger\" onClick={() => handleShowDeleteModal(item.id)}>\n                                            <i className=\"bi bi-trash me-2\"></i>\n                                            Delete\n                                        </Button>\n                                    </div>\n                                    {item.text && <pre>{item.text}</pre>}\n                                    {item.type_of_file && (item.type_of_file !== 'application/pdf' ?\n                                            <img style={{maxWidth: \"100%\"}}\n                                                 src={SERVER_LINK + \"/uploads/\" + item.file}/> :\n                                            <SafePdfViewer src={SERVER_LINK + \"/uploads/\" + item.file}/>\n                                    )\n\n                                    }\n                                </Accordion.Body>\n                            </Accordion.Item>\n\n                    ))\n                }\n            </Accordion>\n            <DeleteModalInformation\n                id={id}\n                showDeleteModal={showDeleteModal}\n                handleCloseDeleteModal={handleCloseDeleteModal}\n            />\n        </>\n    );\n};\n\nexport default TypeOfWorkTabsContent;\n","import React, {useEffect, useState} from 'react';\nimport {Button, Tab, Tabs} from \"react-bootstrap\";\nimport {useTypeOfWorkStore} from \"../../store/useTypeOfWorkStore\";\nimport AddInformationSidePanel from \"./AddInformationSidePanel\";\nimport {usePlanInformationStore} from \"../../store/usePlanInformationStore\";\nimport TypesOfWorkTabsContent from \"./TypeOfWorkTabsContent\";\n\ntype Props={\n    plan_id: number\n}\n\nconst TypesOfWorkTabs = ({plan_id}:Props) => {\n    // Destructure state and action from company store\n    const { typesOfWork, fetchActiveTypesOfWork } = useTypeOfWorkStore();\n    const{planInformations, fetchPlanInformationsInPlan} = usePlanInformationStore();\n\n    const [typeOfWorkId, setTypeOfWorkId] = useState(0);\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = (id:number) => {\n        setShow(true);\n        setTypeOfWorkId(id);\n    }\n\n\n    // Fetch company data on component mount\n    useEffect(() => {\n        fetchActiveTypesOfWork();\n        fetchPlanInformationsInPlan(plan_id);\n    }, [plan_id]);\n\n    return (\n        <>\n            <h4>Types Of Work</h4>\n            <Tabs\n                defaultActiveKey=\"0\"\n                id=\"uncontrolled-tab-example\"\n                className=\"mb-3\"\n            >\n                {typesOfWork.map((typeOfWork, index) => (\n                    <Tab eventKey={index} title={typeOfWork.name} key={typeOfWork.id}>\n                        <div className={'d-flex justify-content-end'}>\n                            <Button className={\"mb-3\"} variant=\"primary\" onClick={()=>handleShow(typeOfWork.id)}>\n                                <i className=\"me-2 bi bi-plus-circle\"></i>\n                                Add\n                            </Button>\n                        </div>\n                        <TypesOfWorkTabsContent planInformations={planInformations} type_of_work_id={typeOfWork.id}/>\n\n                    </Tab>\n                ))}\n            </Tabs>\n            <AddInformationSidePanel show={show} handleClose={handleClose} typeOfWorkId={typeOfWorkId} />\n        </>\n    );\n};\n\nexport default TypesOfWorkTabs;","import React, {useEffect, useState} from 'react';\nimport {usePlanStore} from \"../../store/usePlanStore\";\nimport {Alert, Button, Container} from \"react-bootstrap\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport EditSidePanel from \"../../components/plan/EditSidePanel\";\nimport BreadcrumbsComp from \"../../components/BreadcrumbsComp\";\nimport TypesOfWorkTabs from \"../../components/plan/TypesOfWorkTabs\";\n\nconst DetailPlan = () => {\n    const {plan,fetchPlan} = usePlanStore()\n    const navigate = useNavigate();\n\n    const { company_id, id } = useParams<{company_id:string, id: string }>();\n    const numberId= Number(id);\n    const numberCompanyId= Number(company_id);\n\n\n    const [showEditSidePanel, setShowEditSidePanel] = useState(false);\n    const handleCloseEditSidePanel = () => {\n        setShowEditSidePanel(false);\n    }\n    const handleShowEditSidePanel = (numberId:number) => {\n        setShowEditSidePanel(true);\n    }\n\n    useEffect(() => {\n        fetchPlan(numberId)\n    }, [showEditSidePanel]);\n\n\n    return (\n        <>\n            <Container>\n                <h1>{plan.name}</h1>\n                <hr></hr>\n                <Button className={\"me-2\"} variant=\"outline-secondary\"\n                        onClick={() => navigate(`/companies/${numberCompanyId}/${plan.construction_id}`)}>\n                    <i className=\"bi bi-arrow-left-circle\"></i>\n                </Button>\n                <Button className={\"ms-3\"} variant={\"outline-secondary\"}\n                        onClick={() => handleShowEditSidePanel(plan.id)}>\n                    <i className=\"bi bi-pencil me-2\"></i>\n                    Edit\n                </Button>\n                <hr></hr>\n                <BreadcrumbsComp openPageName ={plan.name}/>\n                {!plan.active &&\n                    <Alert key={'secondary'} variant={'secondary'}>\n                        Not active!\n                    </Alert>}\n                <hr></hr>\n                <TypesOfWorkTabs plan_id={plan.id} />\n\n            </Container>\n            <EditSidePanel\n                id={plan.id}\n                showEditSidePanel={showEditSidePanel}\n                handleCloseEditSidePanel={handleCloseEditSidePanel}\n            />\n        </>\n\n    );\n};\n\nexport default DetailPlan;"],"names":["_ref","openPageName","paths","useLocation","pathname","split","filter","Boolean","_jsxs","Breadcrumb","children","_jsx","Item","linkAs","Link","linkProps","to","map","segment","index","path","slice","join","length","active","decodeURIComponent","id","handleCloseEditSidePanel","plan","fetchPlan","updatePlan","usePlanStore","form","setForm","useState","name","construction_id","validated","setValidated","useEffect","Form","noValidate","onSubmit","async","data","e","currentTarget","preventDefault","checkValidity","stopPropagation","Col","className","Row","Group","controlId","Label","Control","required","type","placeholder","value","onChange","_objectSpread","target","Feedback","Check","checked","label","Button","onClick","variant","showEditSidePanel","Offcanvas","show","onHide","placement","Header","closeButton","Title","Body","EditPlanForm","handleClose","typeOfWorkId","state","addPlanInformation","usePlanInformationStore","type_of_work_id","plan_id","text","file","type_of_file","handleChange","files","as","rows","scroll","AddInformationForm","isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","_excluded","AccordionCollapse","ref","Component","bsPrefix","props","_objectWithoutProperties","useContext","AccordionContext","useBootstrapPrefix","Collapse","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","eventKeyPassed","k","useAccordionButton","AccordionHeader","ariaControls","AccordionItem","contextValue","useMemo","Provider","Accordion","_useUncontrolled","useUncontrolled","activeKey","flush","controlledProps","prefix","concat","Object","assign","src","isPdfAvailable","setIsPdfAvailable","isMobile","test","navigator","userAgent","fetch","method","ok","err","checkPdfExists","window","location","href","style","width","height","border","showDeleteModal","handleCloseDeleteModal","deletePlanInformation","Modal","centered","Footer","handleDelete","planInformations","setId","setShowDeleteModal","_Fragment","item","toString","handleShowDeleteModal","maxWidth","SERVER_LINK","SafePdfViewer","DeleteModalInformation","typesOfWork","fetchActiveTypesOfWork","useTypeOfWorkStore","fetchPlanInformationsInPlan","setTypeOfWorkId","setShow","Tabs","defaultActiveKey","typeOfWork","Tab","title","handleShow","TypesOfWorkTabsContent","AddInformationSidePanel","DetailPlan","navigate","useNavigate","company_id","useParams","numberId","Number","numberCompanyId","setShowEditSidePanel","Container","BreadcrumbsComp","Alert","TypesOfWorkTabs","EditSidePanel"],"sourceRoot":""}